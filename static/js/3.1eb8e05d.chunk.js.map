{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.tsx"],"names":["module","exports","LoginForm","props","useState","password","changeTypePassword","onSubmit","formData","login","email","rememberMe","captcha","render","handleSubmit","action","component","Input","name","type","placeholder","className","s","input","inputPassword","icon","faEye","onClick","passwordIcon","faEyeSlash","errorAuth","captchaURL","src","alt","captchaImg","button","connect","state","isAuth","auth","to"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,cAAgB,6BAA6B,aAAe,4BAA4B,WAAa,0BAA0B,OAAS,sBAAsB,UAAY,2B,mJCsBhPC,EAAiC,SAACC,GAAW,IAAD,EAETC,oBAAkB,GAFT,mBAEzCC,EAFyC,KAE/BC,EAF+B,KAe9C,OACI,cAAC,IAAD,CACIC,SANO,SAACC,GACZL,EAAMM,MAAMD,EAASE,MAAOF,EAASH,SAAUG,EAASG,WAAYH,EAASI,UAMzEC,OAAQ,gBAAEC,EAAF,EAAEA,aAAF,OACJ,uBAAMC,OAAO,GAAGR,SAAUO,EAA1B,UACI,8BACI,cAAC,IAAD,CAAOE,UAAWC,IAAOC,KAAK,QAAQC,KAAK,OAAOC,YAAa,QACxDC,UAAWC,IAAEC,UAExB,gCACI,cAAC,IAAD,CAAOP,UAAWC,IAAOI,UAAS,UAAKC,IAAEC,MAAP,YAAgBD,IAAEE,eAC7CL,KAAMd,EAAW,WAAa,OAAQa,KAAK,WAAWE,YAAY,aACvEf,EAEE,cAAC,IAAD,CAAiBoB,KAAMC,IAAOC,QAAS,kBAAMrB,GAAoBD,IAAWgB,UAAWC,IAAEM,eADzF,cAAC,IAAD,CAAiBH,KAAMI,IAAYF,QAAS,kBAAMrB,GAAoBD,IAAWgB,UAAWC,IAAEM,kBAGrGzB,EAAM2B,WAAa,sBAAMT,UAAWC,IAAEQ,UAAnB,SAA+B3B,EAAM2B,YACzD,gCACI,cAAC,IAAD,CAAOd,UAAU,QACVG,KAAM,WAAYD,KAAK,eAFlC,kBAICf,EAAM4B,YACP,gCACI,qBAAKC,IAAK7B,EAAM4B,WAAYE,IAAI,GAAGZ,UAAWC,IAAEY,aAChD,8BACI,cAAC,IAAD,CAAOlB,UAAU,QACVG,KAAM,OAAQD,KAAK,UAAUG,UAAWC,IAAEC,aAKzD,8BACI,wBAAQF,UAAWC,IAAEa,OAArB,4BA6BTC,uBARS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBR,UAAWO,EAAME,KAAKT,UACtBC,WAAYM,EAAME,KAAKR,cAIoE,CAACtB,WAArF2B,EArBoB,SAACjC,GAEhC,OAAIA,EAAMmC,OACC,cAAC,IAAD,CAAUE,GAAI,aAGrB,sBAAKnB,UAAWC,IAAEb,MAAlB,UACI,uCACA,cAACP,EAAD,eAAeC","file":"static/js/3.1eb8e05d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__C84rM\",\"input\":\"Login_input__2YEHv\",\"inputPassword\":\"Login_inputPassword__ZVvzH\",\"passwordIcon\":\"Login_passwordIcon__1zSmr\",\"captchaImg\":\"Login_captchaImg__2IElY\",\"button\":\"Login_button__2J8ft\",\"errorAuth\":\"Login_errorAuth__3mbJC\"};","import s from './Login.module.css';\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEye, faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    errorAuth: null | string,\r\n    captchaURL: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst LoginForm: React.FC<PropsType> = (props) => {\r\n\r\n    let [password, changeTypePassword] = useState<boolean>(true);\r\n\r\n    type LoginFormValuesType = {\r\n        email: string\r\n        password: string\r\n        rememberMe: boolean\r\n        captcha: string\r\n    }\r\n\r\n    let onSubmit = (formData: LoginFormValuesType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({handleSubmit}) => (\r\n                <form action=\"\" onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field component={Input} name='email' type='text' placeholder={'Email'}\r\n                               className={s.input}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field component={Input} className={`${s.input} ${s.inputPassword}`}\r\n                               type={password ? 'password' : 'text'} name='password' placeholder='Password'/>\r\n                        {!password ?\r\n                            <FontAwesomeIcon icon={faEyeSlash} onClick={() => changeTypePassword(!password)} className={s.passwordIcon}/> :\r\n                            <FontAwesomeIcon icon={faEye} onClick={() => changeTypePassword(!password)} className={s.passwordIcon}/>}\r\n                    </div>\r\n                    {props.errorAuth && <span className={s.errorAuth}>{props.errorAuth}</span>}\r\n                    <div>\r\n                        <Field component=\"input\"\r\n                               type={'checkbox'} name='rememberMe'/> remember me\r\n                    </div>\r\n                    {props.captchaURL &&\r\n                    <div>\r\n                        <img src={props.captchaURL} alt=\"\" className={s.captchaImg}/>\r\n                        <div>\r\n                            <Field component=\"input\"\r\n                                   type={'text'} name='captcha' className={s.input}/>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n\r\n                    <div>\r\n                        <button className={s.button}>Login</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nconst Login: React.FC<PropsType> = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <h1>Login</h1>\r\n            <LoginForm {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        errorAuth: state.auth.errorAuth,\r\n        captchaURL: state.auth.captchaURL\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {login})(Login);"],"sourceRoot":""}