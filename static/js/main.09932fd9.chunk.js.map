{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","api/api.ts","components/NavBar/NavBar.module.css","components/Users/User/User.module.css","components/Header/Header.module.css","api/auth-api.ts","api/security-api.ts","redux/authReducer.ts","api/profile-api.ts","components/NavBar/FriendsSideBar/NavFriendItem/NavFriendItem.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/AvavatarProfile/AvavatarProfile.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/NewPost/NewPost.module.css","components/common/FormsControls/FormsControls.module.css","components/Dialogs/InputMessage/InputMessage.module.css","components/Dialogs/BlockDialogsItem/DialogItem/DialogsItem.module.css","components/Users/Users.module.css","components/NavBar/FriendsSideBar/FriendsSideBar.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/BlockMessage/Message/Message.module.css","components/common/FormsControls/FormsControls.tsx","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Setting.module.css","components/Users/User/PreloaderUsers/PreloaderUsers.module.css","components/Dialogs/BlockMessage/BlockMessage.module.css","components/Dialogs/BlockDialogsItem/BlockDialogsItem.module.css","components/common/Error404/Error404.module.css","reportWebVitals.js","redux/profileReducer.ts","api/users-api.ts","redux/sideBarReducer.ts","redux/dialogsReducer.ts","redux/usersReducer.ts","redux/appReducer.ts","redux/reduxStore.ts","assets/images/user.png","components/NavBar/FriendsSideBar/NavFriendItem/NavFriendItem.tsx","components/NavBar/FriendsSideBar/FriendsSideBar.tsx","components/NavBar/FriendsSideBar/FriendsSideBarContainer.tsx","components/NavBar/NavBar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Setting.tsx","components/common/Preloader/PreloaderButton/PreloaderButton.jsx","components/Users/User/User.tsx","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","components/common/Preloader/Preloader.jsx","components/Users/User/PreloaderUsers/PreloaderUsers.tsx","redux/usersSelectors.ts","components/Users/UsersContainre.tsx","components/Profile/ProfileInfo/ProfileData.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/AvavatarProfile/AvavatarProfile.tsx","components/Profile/ProfileInfo/StatusProfile/StatusProfileWithHook.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","utils/Validators/validator.ts","components/Profile/MyPosts/NewPost/NewPost.tsx","components/Profile/MyPosts/NewPost/NewPostContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/Header/HeaderComponent.tsx","components/Dialogs/InputMessage/InputMessage.tsx","components/Dialogs/BlockMessage/Message/Message.tsx","components/Dialogs/BlockMessage/BlockMessage.tsx","components/Dialogs/BlockDialogsItem/DialogItem/DialogsItem.tsx","components/Dialogs/BlockDialogsItem/BlockDialogsItem.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.tsx","hoc/withSuspense.jsx","assets/images/error_404.png","components/common/Error404/Error404.js","App.jsx","index.js"],"names":["module","exports","ResultCodesEnum","ResultCodesForCaptchaEnum","instance","axios","create","baseURL","withCredentials","headers","authAPI","get","then","response","data","email","password","rememberMe","captcha","post","delete","securityAPI","SET_USER_DATA","ADD_USER_PHOTO","ERROR_AUTH","SET_CAPTCHA_URL_SUCCESS","initialState","id","login","isFetching","isAuth","userPhoto","errorAuth","captchaURL","setAuthUserData","type","payload","addUserPhoto","userId","dispatch","a","profileAPI","getUserProfile","photos","small","message","setCaptchaURLSuccess","resultCode","Success","getAuthUser","CaptchaIsRequired","url","messages","logout","getState","meData","auth","authReducer","state","action","getStatus","updateStatus","status","put","updateAvatar","file","formData","FormData","append","updateProfileInfo","profile","Textarea","input","meta","props","hasError","error","touched","className","s","formControl","errorInput","Input","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","DELETE_POST","SET_USERS_PROFILE","TOGGLE_PRELOADER","SET_USER_STATUS","ADD_AVATAR","postData","likesCount","isPreloader","setUserProfile","setUserStatus","setPreloaderToggle","preloader","profileReducer","newPost","length","newPostText","filter","p","postId","usersAPI","currentPage","pageSize","SET_SIDE_BAR_USERS","users","sideBarReducer","ADD_MESSAGE","messageData","dialogsData","name","avatarUser","dialogsReducer","newMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_USERS_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_PROGRESS","usersData","totalUsersCount","followingInProgress","followSuccess","unfollowSuccess","setTotalUsersCount","toggleFollowingProgress","usersReducer","map","u","followed","numberPage","INITIALIZED_SUCCESS","initialized","appReducer","rootReducers","combineReducers","app","store","createStore","applyMiddleware","thunk","window","NavFriend","friendItem","src","userNull","alt","to","friendItemPreloader","FriendsSideBar","nameUserElement","user","buttonFriends","blockFriends","FriendsSideBarContainer","connect","NavBar","nav","item","item_first","activeClassName","active","item_setting","News","news","Music","music","Setting","setting","PreloaderButton","User","avatarBlock","large","authorizedUserId","disabled","some","onClick","unfollow","buttonFollow","follow","profileUser","aboutUser","nameUser","bio","blockCountry","countyUser","cityUser","Paginator","portionSize","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","buttonChangeList","onPageChanged","numbersPage","selectedPage","Users","wrapper","onChange","e","target","value","selectPage","optionPage","Preloader","style","height","width","borderWidth","PreloaderUser","UserAPIComponent","setUsersCurrentPage","getUsers","this","PreloaderUsers","React","Component","UserContainer","items","totalCount","ProfileData","isOwner","changeInfoButton","editButton","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","ProfileDataForm","isChecked","setIsChecked","onSubmit","fullName","changeProfile","render","handleSubmit","component","initialValue","form","checkbox","checked","check","AvatarProfile","avatar","photo","blockInput","files","addChangeAvatar","inputPhoto","htmlFor","fakeInputPhoto","blockFakeInputPhoto","icon","faUserEdit","iconFakeInputPhoto","StatusProfileWithHook","editMode","setEditMode","setStatus","useEffect","autoFocus","updateUserStatus","onDoubleClick","ProfileInfo","profile_logo","descriptions","descriptions_logo","descriptions_text","descriptions_name","descriptions_about","Post","post_content","post_logo","post_text","deletePost","post_like","post_likes","likes","required","AddNewPost","composeValidators","validators","reduce","validator","undefined","values","addPost","inputNewPost","newPost_textarea","placeholder","validate","maxLength","hasValidationErrors","newPost_button","NewPost","NewPostContainer","MyPosts","postsElement","posts","posts_title","Profile","preloaderBox","ProfileContainerAPI","match","params","history","getUserStatus","refreshProfile","prevProps","Number","ProfileContainer","compose","withRouter","Header","header","header_logo","loginBlock","blockPhoto","photoNull","buttonLogout","HeaderComponent","AddMessageForm","addNewMessage","textAreaMessage","inputMessage","textMessage","buttonSend","buttonImg","InputMessage","Message","messageInto","BlockMessage","messageElement","blockMessage","DialogItem","path","dialog","BlockDialogsItem","dialogElement","dialogs_items","Dialogs","dialogs","mapStateToProps","withAuthRedirect","DialogsContainer","WithSuspense","Suspense","fallback","Error404","error404","imagesError","Login","lazy","App","initializeApp","initialize","exact","promise","promiseSideBar","Promise","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09932fd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_logo\":\"ProfileInfo_profile_logo__1gGmI\",\"descriptions\":\"ProfileInfo_descriptions__3FOxw\",\"descriptions_logo\":\"ProfileInfo_descriptions_logo__v86Dv\",\"descriptions_text\":\"ProfileInfo_descriptions_text__1Bk_o\",\"descriptions_name\":\"ProfileInfo_descriptions_name__22uMQ\",\"descriptions_about\":\"ProfileInfo_descriptions_about__7Fcjm\",\"contacts\":\"ProfileInfo_contacts__2uQFH\",\"editButton\":\"ProfileInfo_editButton__pSVk-\",\"form\":\"ProfileInfo_form__3xfph\",\"checkbox\":\"ProfileInfo_checkbox__1mNzV\",\"wrapper\":\"ProfileInfo_wrapper__uBebX\",\"check\":\"ProfileInfo_check__2cAY0\"};","import axios from \"axios\";\r\nimport {UserType} from \"../Types/types\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '3588cd03-a8ff-4f0d-9d81-9d9c39c14fdb'\r\n    }\r\n})\r\n\r\n\r\nexport enum ResultCodesEnum  {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport enum ResultCodesForCaptchaEnum  {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10,\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1ZsFP\",\"item_first\":\"NavBar_item_first__MOfNm\",\"item\":\"NavBar_item__2oFxI\",\"active\":\"NavBar_active__1EKNC\",\"item_setting\":\"NavBar_item_setting__3YL6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__10vDW\",\"avatarBlock\":\"User_avatarBlock__12Mle\",\"avatarUser\":\"User_avatarUser__1CpwV\",\"buttonFollow\":\"User_buttonFollow__1CNQl\",\"profileUser\":\"User_profileUser__1tSXC\",\"aboutUser\":\"User_aboutUser__1t7mg\",\"nameUser\":\"User_nameUser__2Op41\",\"blockCountry\":\"User_blockCountry__jcTk-\",\"countyUser\":\"User_countyUser__3341w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1GvhD\",\"header_logo\":\"Header_header_logo__-GRmH\",\"loginBlock\":\"Header_loginBlock__2MFl8\",\"blockPhoto\":\"Header_blockPhoto__2jnVz\",\"photo\":\"Header_photo__63AOT\",\"photoNull\":\"Header_photoNull__19x9a\",\"active\":\"Header_active__SB70v\",\"buttonLogout\":\"Header_buttonLogout__2dCym\"};","import {instance, ResultCodesEnum, ResultCodesForCaptchaEnum} from \"./api\";\r\n\r\ntype MeResponseType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    message: Array<string>\r\n}\r\ntype LoginResponseType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodesEnum | ResultCodesForCaptchaEnum\r\n    messages: Array<string>\r\n}\r\ntype LogoutResponseType = {\r\n    data: {}\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>('auth/me').then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<LoginResponseType>('auth/login', {\r\n            email, password, rememberMe, captcha\r\n        }).then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>('auth/login')\r\n    }\r\n}","import {instance} from \"./api\";\r\n\r\nexport const securityAPI = {\r\n    captchaURL() {\r\n        return instance.get('/security/get-captcha-url')\r\n    }\r\n\r\n}","import {ResultCodesEnum, ResultCodesForCaptchaEnum} from \"../api/api\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\n\r\nconst SET_USER_DATA = 'ruslnetwork/authReducer/SET_USER_DATA';\r\nconst ADD_USER_PHOTO = 'ruslnetwork/authReducer/ADD_USER_PHOTO';\r\nconst ERROR_AUTH = 'ruslnetwork/authReducer/ERROR_AUTH';\r\nconst SET_CAPTCHA_URL_SUCCESS = 'ruslnetwork/authReducer/SET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nexport type InitialStateType = {\r\n    id: null | number,\r\n    login: null | string,\r\n    email: null | string,\r\n    isFetching: boolean,\r\n    isAuth: boolean,\r\n    userPhoto: null | string,\r\n    errorAuth: null | string,\r\n    captchaURL: null | string\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    userPhoto: '',\r\n    errorAuth: null,\r\n    captchaURL: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case ADD_USER_PHOTO:\r\n            return {\r\n                ...state,\r\n                userPhoto: action.userPhoto,\r\n            }\r\n        case ERROR_AUTH:\r\n            return {\r\n                ...state,\r\n                errorAuth: action.message,\r\n            }\r\n        case SET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaURL: action.captchaURL\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype SetAuthUserDataActionPayloadType = {\r\n    id: number | null\r\n    login: string | null\r\n    email: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\n\r\nconst setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean): SetAuthUserDataActionType => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {id, login, email, isAuth}\r\n    }\r\n}\r\n\r\ntype AddUserPhotoSuccessType = {\r\n    type: typeof ADD_USER_PHOTO\r\n    userPhoto: string\r\n}\r\n\r\nconst addUserPhotoSuccess = (userPhoto: string): AddUserPhotoSuccessType => {\r\n    return {\r\n        type: ADD_USER_PHOTO,\r\n        userPhoto,\r\n    }\r\n}\r\n\r\nexport const addUserPhoto = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        const response = await profileAPI.getUserProfile(userId)\r\n        dispatch(addUserPhotoSuccess(response.data.photos.small))\r\n    }\r\n}\r\n\r\ntype ErrorAuthType = {\r\n    type: typeof ERROR_AUTH\r\n    message: string | null\r\n}\r\n\r\nconst errorAuth = (message: string | null): ErrorAuthType => {\r\n    return {\r\n        type: ERROR_AUTH,\r\n        message,\r\n    }\r\n}\r\n\r\ntype SetCaptchaURLSuccessType = {\r\n    type: typeof SET_CAPTCHA_URL_SUCCESS\r\n    captchaURL: string | null\r\n}\r\n\r\nconst setCaptchaURLSuccess = (captchaURL: string | null): SetCaptchaURLSuccessType => {\r\n    return {\r\n        type: SET_CAPTCHA_URL_SUCCESS,\r\n        captchaURL\r\n    }\r\n}\r\n\r\nconst setCaptchaURL = () => {\r\n    return async (dispatch: any) => {\r\n        const response = await securityAPI.captchaURL()\r\n        dispatch(setCaptchaURLSuccess(response.data.url))\r\n    }\r\n}\r\n\r\nexport const login = (email: any, password: any, rememberMe: any, captcha: any) => {\r\n    return async (dispatch: any) => {\r\n        const data = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUser())\r\n            dispatch(errorAuth(null))\r\n        } else {\r\n            if (data.resultCode === ResultCodesForCaptchaEnum.CaptchaIsRequired) {\r\n                dispatch(setCaptchaURL())\r\n            }\r\n            dispatch(errorAuth(data.messages[0]))\r\n        }\r\n        dispatch(setCaptchaURLSuccess(null))\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch: any) => {\r\n        const response = await authAPI.logout()\r\n            if (response.data.resultCode === ResultCodesEnum.Success) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n    }\r\n}\r\n\r\nexport const getAuthUser = () => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const meData = await authAPI.me()\r\n        if (meData.resultCode === 0) {\r\n            dispatch(setAuthUserData(meData.data.id, meData.data.login, meData.data.email, true))\r\n        }\r\n        dispatch(addUserPhoto(getState().auth.id))\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import {instance} from \"./api\";\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {\r\n            status: status,\r\n        })\r\n    },\r\n    updateAvatar(file: any) {\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"image\", file);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            }\r\n        })\r\n    },\r\n    updateProfileInfo(profile: any) {\r\n        return instance.put('profile', profile)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendItem\":\"NavFriendItem_friendItem__3tREF\",\"friendItemPreloader\":\"NavFriendItem_friendItemPreloader__3GrP3\",\"avatarUser\":\"NavFriendItem_avatarUser__2Q4fg\",\"name\":\"NavFriendItem_name__2_AbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1cgbX\",\"post_content\":\"Post_post_content__22nR6\",\"post_logo\":\"Post_post_logo__3iji_\",\"post_text\":\"Post_post_text__1m5Mt\",\"post_like\":\"Post_post_like__NnLKi\",\"post_likes\":\"Post_post_likes__ZRgdt\",\"delete\":\"Post_delete__3n7Q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"AvavatarProfile_avatar__17d2M\",\"inputPhoto\":\"AvavatarProfile_inputPhoto__3bOgk\",\"blockInput\":\"AvavatarProfile_blockInput__3TjVq\",\"blockFakeInputPhoto\":\"AvavatarProfile_blockFakeInputPhoto__2mf4v\",\"iconFakeInputPhoto\":\"AvavatarProfile_iconFakeInputPhoto__1bFek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonChangeList\":\"Paginator_buttonChangeList__2Pcro\",\"numbersPage\":\"Paginator_numbersPage__2dMmH\",\"selectedPage\":\"Paginator_selectedPage__3N0Wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__gckab\",\"newPost_textarea\":\"NewPost_newPost_textarea__2Eb51\",\"newPost_button\":\"NewPost_newPost_button__3EsHI\",\"disabled\":\"NewPost_disabled__3z2-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1eqP1\",\"errorInput\":\"FormsControls_errorInput__Filto\",\"errorTextarea\":\"FormsControls_errorTextarea__stxTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputMessage\":\"InputMessage_inputMessage__lnSYt\",\"textMessage\":\"InputMessage_textMessage__2TeLS\",\"buttonSend\":\"InputMessage_buttonSend__3RzUJ\",\"buttonImg\":\"InputMessage_buttonImg__PPXw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__1uTuI\",\"active\":\"DialogsItem_active__1jgbh\",\"avatarUser\":\"DialogsItem_avatarUser__3Dwfb\",\"nameUser\":\"DialogsItem_nameUser__1JDz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__2IDO-\",\"selectPage\":\"Users_selectPage__3xoGZ\",\"optionPage\":\"Users_optionPage__ikGdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockFriends\":\"FriendsSideBar_blockFriends__2iMJn\",\"buttonFriends\":\"FriendsSideBar_buttonFriends__1IB2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__13nXA\",\"preloaderBox\":\"Profile_preloaderBox__s-cO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__223X8\",\"posts_title\":\"MyPosts_posts_title__3tsFr\",\"newPost\":\"MyPosts_newPost__1RZDe\",\"newPost_textarea\":\"MyPosts_newPost_textarea__2G1bL\",\"newPost_button\":\"MyPosts_newPost_button__DKrux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1qLjX\",\"dialogs_items\":\"Dialogs_dialogs_items__3JY44\",\"messages\":\"Dialogs_messages__1yubI\",\"blockMessage\":\"Dialogs_blockMessage__1tLBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__16buQ\",\"messageInto\":\"Message_messageInto__dBjVq\"};","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={`${s.formControl} ${hasError && s.errorInput}`}>\r\n            <textarea {...input} {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={`${s.formControl} ${hasError && s.errorInput}`}>\r\n            <input {...input} {...props}/>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3SN8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__SNPKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting\":\"Setting_setting__3dyKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PreloaderUsers_wrapper__1HebR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockMessage\":\"BlockMessage_blockMessage__Ql4Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_items\":\"BlockDialogsItem_dialogs_items__1Ilm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imagesError\":\"Error404_imagesError__3CKE0\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ResultCodesEnum} from \"../api/api\";\r\nimport {addUserPhoto} from \"./authReducer\";\r\nimport {PhotosType, PostDataType, ProfileType} from \"../Types/types\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst TOGGLE_PRELOADER = 'TOGGLE_PRELOADER';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst ADD_AVATAR = 'ADD_AVATAR';\r\n// const CHANGE_PROFILE = 'CHANGE_PROFILE'\r\n\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Hi, How are you?', likesCount: 189},\r\n        {id: 2, message: 'I\\'m Happy', likesCount: 95},\r\n    ] as Array<PostDataType>,\r\n    profile: null as ProfileType | null,\r\n    isPreloader: false,\r\n    status: '',\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: state.postData.length + 1,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postData: state.postData.filter(p => p.id != action.postId)\r\n            }\r\n        case SET_USERS_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case TOGGLE_PRELOADER:\r\n            return {...state, isPreloader: action.preloader}\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status}\r\n        case ADD_AVATAR:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        // case CHANGE_PROFILE:\r\n        //     return {\r\n        //         ...state,\r\n        //         profile: {\r\n        //             ...state.profile,\r\n        //             contacts: action.profile.contacts,\r\n        //             lookingForAJob: action.profile.lookingForAJob,\r\n        //             lookingForAJobDescription: action.profile.lookingForAJobDescription\r\n        //         } as ProfileType\r\n        //     }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\ntype AddPostActionType = {\r\n    type: typeof ADD_POST,\r\n    newPostText: string\r\n}\r\n\r\nexport const addPost = (newPostText: string): AddPostActionType => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST,\r\n    postId: number\r\n}\r\n\r\nexport const deletePost = (postId: number): DeletePostActionType => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USERS_PROFILE,\r\n    profile: ProfileType | null\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileType | null): SetUserProfileActionType => {\r\n    return {\r\n        type: SET_USERS_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\ntype SetUserStatusActionType = {\r\n    type: typeof SET_USER_STATUS,\r\n    status: string\r\n}\r\n\r\nexport const setUserStatus = (status: string): SetUserStatusActionType => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\ntype SetPreloaderToggleActionType = {\r\n    type: typeof TOGGLE_PRELOADER\r\n    preloader: boolean\r\n}\r\n\r\nexport const setPreloaderToggle = (preloader: boolean): SetPreloaderToggleActionType => ({\r\n    type: TOGGLE_PRELOADER,\r\n    preloader\r\n})\r\n\r\n\r\ntype AddAvatarSuccessActionType = {\r\n    type: typeof ADD_AVATAR\r\n    photos: PhotosType\r\n}\r\n\r\nconst addAvatarSuccess = (photos: PhotosType): AddAvatarSuccessActionType => {\r\n    return {\r\n        type: ADD_AVATAR,\r\n        photos\r\n    }\r\n}\r\n\r\n// export const changeProfileSuccess = (profile: any) => {\r\n//     return {\r\n//         type: CHANGE_PROFILE,\r\n//         profile\r\n//     }\r\n// }\r\n\r\nexport const getUserProfile = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserProfile(null))\r\n        dispatch(setPreloaderToggle(true))\r\n        try {\r\n            const response = await profileAPI.getUserProfile(userId)\r\n            dispatch(setPreloaderToggle(false))\r\n            dispatch(setUserProfile(response.data))\r\n        } catch (error) {\r\n            debugger\r\n            dispatch(setUserProfile(error.message))\r\n            dispatch(setPreloaderToggle(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        const response = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(response.data))\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        const response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addChangeAvatar = (file: any) => {\r\n    debugger\r\n    return async (dispatch: any, getState: any) => {\r\n        let response = await profileAPI.updateAvatar(file)\r\n        if (response.data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(addAvatarSuccess(response.data.data.photos))\r\n        }\r\n        dispatch(addUserPhoto(getState().auth.id))\r\n    }\r\n}\r\n\r\nexport const changeProfile = (profile: any) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const userId = getState().auth.id\r\n        debugger\r\n        let response = await profileAPI.updateProfileInfo(profile)\r\n        if (response.data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getUserProfile(userId))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","import {GetItemsType, instance, ResultCodesEnum} from \"./api\";\r\n\r\n\r\ntype FollowResponseType = {\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n    data: any}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<FollowResponseType>('follow/' + id)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete('follow/' + id)\r\n    },\r\n}\r\n","import {usersAPI} from \"../api/users-api\"\r\nimport {UserType} from \"../Types/types\";\r\n\r\nconst SET_SIDE_BAR_USERS = 'SET_SIDE_BAR_USERS'\r\n\r\n\r\n\r\ntype InitialStateType = {\r\n    users: Array<UserType>\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n}\r\n\r\nconst sideBarReducer = (state = initialState, action: SetSideBarUsersActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_SIDE_BAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetSideBarUsersActionType = {\r\n    type: typeof SET_SIDE_BAR_USERS,\r\n    users: Array<UserType>\r\n}\r\n\r\nlet setSideBarUsers = (users: Array<UserType>): SetSideBarUsersActionType => {\r\n    return {\r\n        type: SET_SIDE_BAR_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const getSideBarUsers = () => {\r\n    return async (dispatch: any) => {\r\n        let data = await usersAPI.getUsers(1, 3)\r\n        dispatch(setSideBarUsers(data.items))\r\n    }\r\n}\r\n\r\nexport default sideBarReducer;","import {DialogType, MessageType} from \"../Types/types\";\r\n\r\nconst ADD_MESSAGE = 'ADD-NEW-MESSAGE'\r\n\r\nlet initialState = {\r\n    messageData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Bye'},\r\n    ] as Array<MessageType>,\r\n\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Sun',\r\n            avatarUser: 'https://solarsystem.nasa.gov/system/basic_html_elements/11561_Sun.png'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Teacher',\r\n            avatarUser: 'https://ikeacity.by/UserFiles/products/images2/large/903/684/47/doska-molbert-ikea-mola-0.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Nikitka',\r\n            avatarUser: 'https://www.meme-arsenal.com/memes/5608fd17a92284aa78fdf6ec089a3c97.jpg'\r\n        },\r\n    ] as Array<DialogType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 1,\r\n                message: action.message,\r\n            }\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, newMessage],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype AddNewMessageType = {\r\n    type: typeof ADD_MESSAGE,\r\n    message: string\r\n}\r\n\r\nexport const addNewMessage = (message: string): AddNewMessageType => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        message\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n","import {usersAPI} from \"../api/users-api\";\r\nimport {UserType} from \"../Types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\nconst FOLLOW = 'ruslnetwork/usersReducer/FOLLOW';\r\nconst UNFOLLOW = 'ruslnetwork/usersReducer/UNFOLLOW';\r\nconst SET_USERS = 'ruslnetwork/usersReducer/SET-USERS';\r\nconst SET_USERS_CURRENT_PAGE = 'ruslnetwork/usersReducer/SET_USERS_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'ruslnetwork/usersReducer/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_PRELOADER = 'ruslnetwork/usersReducer/TOGGLE_PRELOADER';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'ruslnetwork/usersReducer/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UserType>,\r\n    pageSize: 20,\r\n    totalUsersCount: 11,\r\n    currentPage: 1,\r\n    isPreloader: true,\r\n    followingInProgress: [] as Array<number>, // array of users id\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, usersData: [...action.users]}\r\n        case SET_USERS_CURRENT_PAGE:\r\n            return {...state, currentPage: +action.numberPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_PRELOADER:\r\n            return {...state, isPreloader: action.preloader}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.preloader ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id != action.userId),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsType = FollowSuccessActionType\r\n    | UnfollowSuccessActionType\r\n    | SetUsersActionType\r\n    | SetUsersCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | SetPreloaderToggleActionType\r\n    | ToggleFollowingProgressActionType\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\r\n\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\n\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\r\n\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\n\r\ntype SetUsersCurrentPageActionType = {\r\n    type: typeof SET_USERS_CURRENT_PAGE\r\n    numberPage: number\r\n}\r\n\r\nexport const setUsersCurrentPage = (numberPage: number): SetUsersCurrentPageActionType => ({\r\n    type: SET_USERS_CURRENT_PAGE,\r\n    numberPage\r\n})\r\n\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: number\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n})\r\n\r\ntype SetPreloaderToggleActionType = {\r\n    type: typeof TOGGLE_PRELOADER,\r\n    preloader: boolean\r\n}\r\n\r\nexport const setPreloaderToggle = (preloader: boolean): SetPreloaderToggleActionType => ({\r\n    type: TOGGLE_PRELOADER,\r\n    preloader\r\n})\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    preloader: boolean,\r\n    userId: number\r\n}\r\n\r\nexport const toggleFollowingProgress = (preloader: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    preloader,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(setPreloaderToggle(true))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(setPreloaderToggle(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let response = await usersAPI.follow(userId)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let response = await usersAPI.unfollow(userId)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import {getAuthUser} from \"./authReducer\";\r\nimport {getSideBarUsers} from \"./sideBarReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'ruslnetwork/appReducer/INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessType => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch: any) => {\r\n       let promise = dispatch(getAuthUser());\r\n       let promiseSideBar = dispatch(getSideBarUsers())\r\n        Promise.all([promise, promiseSideBar]).then(() => {\r\n            dispatch(initializedSuccess());\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sideBarReducer from \"./sideBarReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet rootReducers = combineReducers({\r\n    profileReducer: profileReducer,\r\n    dialogsReducer: dialogsReducer,\r\n    sideBarReducer: sideBarReducer,\r\n    usersReducer: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\n\r\ntype RootReducerType = typeof rootReducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","export default __webpack_public_path__ + \"static/media/user.affd02bf.png\";","import {NavLink} from \"react-router-dom\";\r\nimport s from \"./NavFriendItem.module.css\";\r\nimport userNull from '../../../../assets/images/user.png';\r\n\r\n\r\ntype PropsType = {\r\n    isPreloader: boolean\r\n    avatarUser: string | null\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst NavFriend: React.FC<PropsType> = (props) => {\r\n    return (<div>\r\n            {!props.isPreloader ? <NavLink to={`/profile/${props.id}`}\r\n                                           className={`${s.friendItem} ${props.isPreloader && s.friendItemPreloader}`}>\r\n                    <img src={props.avatarUser ? props.avatarUser : userNull}\r\n                         alt='avatar' className={s.avatarUser}/>\r\n                    <span className={s.name}>{props.name}</span>\r\n                </NavLink> :\r\n                <div className={s.friendItem}><img src={props.avatarUser ? props.avatarUser : userNull}\r\n                          alt='avatar' className={s.avatarUser}/>\r\n                    <span className={s.name}>{props.name}</span></div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NavFriend;","import s from './FriendsSideBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport NavFriend from \"./NavFriendItem/NavFriendItem\";\r\nimport {UserType} from \"../../../Types/types\";\r\n\r\ntype PropsType = {\r\n    nameUserElement: Array<UserType>\r\n    isPreloader: boolean\r\n}\r\n\r\nconst FriendsSideBar: React.FC<PropsType> = (props) => {\r\n    let nameUserElement = props.nameUserElement.map(user => <NavFriend name={user.name} avatarUser={user.photos.small}\r\n                                                                       key={user.id} id={user.id}\r\n                                                                       isPreloader={props.isPreloader}/>);\r\n\r\n    return (\r\n        <nav>\r\n            <NavLink to='/users' className={s.buttonFriends}>\r\n                Friends\r\n            </NavLink>\r\n            <div className={s.blockFriends}>\r\n                {nameUserElement}\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default FriendsSideBar;","import FriendsSideBar from \"./FriendsSideBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserType} from \"../../../Types/types\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    nameUserElement: Array<UserType>\r\n    isPreloader: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return{\r\n        nameUserElement: state.sideBarReducer.users,\r\n        isPreloader: state.profileReducer.isPreloader\r\n    }\r\n}\r\n\r\nconst FriendsSideBarContainer = connect<MapStatePropsType, {}, {}, AppStateType>(mapStateToProps)(FriendsSideBar)\r\n\r\n\r\n\r\nexport default FriendsSideBarContainer;","import s from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsSideBarContainer from \"./FriendsSideBar/FriendsSideBarContainer\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.item_first}`}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialog' activeClassName={s.active}>Message</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.item_setting}`}>\r\n                <NavLink to='/setting' activeClassName={s.active}>Setting</NavLink>\r\n            </div>\r\n            <FriendsSideBarContainer/>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import s from './Setting.module.css'\r\n\r\nconst Setting = () => {\r\n    return (\r\n        <div className={s.setting}>\r\n            Setting\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import React from \"react\";\r\nimport './PreloaderButton.css'\r\n\r\nlet PreloaderButton = (props) => {\r\n    return (<div className=\"lds-ellipsis\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>)\r\n}\r\n\r\nexport default PreloaderButton;","import React from 'react';\r\nimport s from './User.module.css'\r\nimport userNull from '../../../assets/images/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PreloaderButton from \"../../common/Preloader/PreloaderButton/PreloaderButton\";\r\nimport {UserType} from \"../../../Types/types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    authorizedUserId: number | null\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({user, ...props}) => {\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.avatarBlock}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={s.avatarUser} src={user.photos.large != null ? user.photos.large : userNull}\r\n                         alt=\"avatar\"/>\r\n                </NavLink>\r\n                {props.authorizedUserId === user.id ? null : (user.followed\r\n                    ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.unfollow(user.id)\r\n                    }}\r\n                              className={s.buttonFollow}>\r\n                        {props.followingInProgress.some(id => id === user.id) ? <PreloaderButton/> : 'Unfollow'}\r\n                    </button>\r\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.follow(user.id)\r\n                    }}\r\n                              className={s.buttonFollow}>\r\n                        {props.followingInProgress.some(id => id === user.id) ? <PreloaderButton/> : 'Follow'}\r\n                    </button>)}\r\n            </div>\r\n            <div className={s.profileUser}>\r\n                <div className={s.aboutUser}>\r\n                    <div className={s.nameUser}>{user.name}</div>\r\n                    <div className={s.bio}>{user.status}</div>\r\n                </div>\r\n                <div className={s.blockCountry}>\r\n                    <div className={s.countyUser}>{'user.country'}</div>\r\n                    <div className={s.cityUser}>{'user.city'}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({portionSize = 20, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    let i = 1\r\n    for (i; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState<number>(Math.ceil(props.currentPage / portionSize))\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button disabled={portionNumber === 1 && true} className={s.buttonChangeList} onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Last\r\n            </button>\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => (\r\n                    <button key={p} onClick={() => props.onPageChanged(p)}\r\n                            className={`${s.numbersPage} ${props.currentPage === p && s.selectedPage}`}>\r\n                        {p}\r\n                    </button>\r\n                ))}\r\n            <button disabled={portionNumber === portionCount && true} className={s.buttonChangeList} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport User from \"./User/User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {UserType} from \"../../Types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    portionSize?: number\r\n    usersData: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: Array<number>\r\n    authorizedUserId: number | null\r\n}\r\n\r\n\r\nlet Users: React.FC<PropsType> = (props) => {\r\n    let usersData = props.usersData.map(user => <User follow={props.follow} unfollow={props.unfollow}\r\n                                                      user={user} key={user.id}\r\n                                                      followingInProgress={props.followingInProgress}\r\n                                                      authorizedUserId={props.authorizedUserId}/>)\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    let i = 1\r\n    for (i; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let handleChange = (e: any) => {\r\n        props.onPageChanged(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <select onChange={handleChange} value={props.currentPage} className={s.selectPage}>\r\n                {pages.map(p => (\r\n                    <option key={p} className={s.optionPage}>{p} </option>\r\n                ))}\r\n            </select>\r\n            {usersData}\r\n            <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                       currentPage={props.currentPage} onPageChanged={props.onPageChanged}/>\r\n        </div>)\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport './Preloader.css'\r\n\r\nlet Preloader = (props) => {\r\n    return (<div className=\"lds-ring\" >\r\n        <div style={{height: `${props.height}`, width:`${props.width}`, borderWidth:`${props.borderWidth}`}}></div>\r\n        <div style={{height: `${props.height}`, width:`${props.width}`, borderWidth:`${props.borderWidth}`}}></div>\r\n        <div style={{height: `${props.height}`, width:`${props.width}`, borderWidth:`${props.borderWidth}`}}></div>\r\n        <div style={{height: `${props.height}`, width:`${props.width}`, borderWidth:`${props.borderWidth}`}}></div>\r\n    </div>)\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport s from './PreloaderUsers.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nlet PreloaderUser = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <Preloader height={'500px'} width={'500px'} borderWidth={'40px'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreloaderUser;","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const usersData = (state: AppStateType) => {\r\n    return state.usersReducer.usersData\r\n}\r\n\r\nexport const pageSize = (state: AppStateType) => {\r\n    return state.usersReducer.pageSize\r\n}\r\n\r\nexport const totalUsersCount = (state: AppStateType) => {\r\n    return state.usersReducer.totalUsersCount\r\n}\r\n\r\nexport const currentPage = (state: AppStateType) => {\r\n    return state.usersReducer.currentPage\r\n}\r\n\r\nexport const isPreloader = (state: AppStateType) => {\r\n    return state.usersReducer.isPreloader\r\n}\r\n\r\nexport const followingInProgress = (state: AppStateType) => {\r\n    return state.usersReducer.followingInProgress\r\n}\r\n\r\nexport const authorizedUserId = (state: AppStateType) => {\r\n    return state.auth.id\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, getUsers,\r\n    setTotalUsersCount,\r\n    setUsersCurrentPage,\r\n    unfollow,\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport PreloaderUsers from \"./User/PreloaderUsers/PreloaderUsers\";\r\nimport {UserType} from \"../../Types/types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {\r\n    authorizedUserId,\r\n    currentPage,\r\n    followingInProgress,\r\n    isPreloader,\r\n    pageSize,\r\n    totalUsersCount,\r\n    usersData\r\n} from \"../../redux/usersSelectors\";\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isPreloader: boolean\r\n    totalUsersCount: number\r\n    usersData: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    authorizedUserId: number | null\r\n    portionSize?: number\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    setUsersCurrentPage: (numberPage: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UserAPIComponent extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (numberPage: number) => {\r\n        this.props.setUsersCurrentPage(numberPage)\r\n        this.props.getUsers(numberPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isPreloader ?\r\n                    <PreloaderUsers/> : <Users follow={this.props.follow} unfollow={this.props.unfollow}\r\n                                               onPageChanged={this.onPageChanged}\r\n                                               currentPage={this.props.currentPage}\r\n                                               usersData={this.props.usersData}\r\n                                               totalUsersCount={this.props.totalUsersCount}\r\n                                               pageSize={this.props.pageSize}\r\n                                               followingInProgress={this.props.followingInProgress}\r\n                                               authorizedUserId={this.props.authorizedUserId}\r\n                    />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        usersData: usersData(state),\r\n        pageSize: pageSize(state),\r\n        totalUsersCount: totalUsersCount(state),\r\n        currentPage: currentPage(state),\r\n        isPreloader: isPreloader(state),\r\n        followingInProgress: followingInProgress(state),\r\n        authorizedUserId: authorizedUserId(state),\r\n    }\r\n}\r\n\r\n\r\n//TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState\r\nconst UserContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n    {\r\n        follow, unfollow,\r\n        setUsersCurrentPage, getUsers\r\n    })\r\n(UserAPIComponent);\r\n\r\nexport default UserContainer;","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {ProfileType} from \"../../../Types/types\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n    addChangeAvatar: (file: any) => void\r\n    changeInfoButton: (profile: any) => void\r\n}\r\n\r\nconst ProfileData: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {!props.isOwner &&\r\n            <button onClick={props.changeInfoButton} className={s.editButton}>Change profile</button>}\r\n            <p>About Me: {props.profile && props.profile.aboutMe}</p>\r\n            <p>Ищешь работу: {props.profile && props.profile.lookingForAJob ? 'да' : 'нет'}</p>\r\n            {props.profile && props.profile.lookingForAJobDescription &&\r\n            <p>Описание работы: {props.profile.lookingForAJobDescription}</p>}\r\n            <p className={s.contacts}>Контакты</p>\r\n            {props.profile && props.profile.contacts.facebook &&\r\n            <p>Страница в facebook: {props.profile.contacts.facebook}</p>}\r\n            {props.profile && props.profile.contacts.website &&\r\n            <p>Мой веб-сайт: {props.profile.contacts.website}</p>}\r\n            {props.profile && props.profile.contacts.vk &&\r\n            <p>Страница ВКонтакте: {props.profile.contacts.vk}</p>}\r\n            {props.profile && props.profile.contacts.twitter &&\r\n            <p>Страница в twitter: {props.profile.contacts.twitter}</p>}\r\n            {props.profile && props.profile.contacts.instagram &&\r\n            <p>Страница в instagram: {props.profile.contacts.instagram}</p>}\r\n            {props.profile && props.profile.contacts.youtube &&\r\n            <p>Мой канал на youtube: {props.profile.contacts.youtube}</p>}\r\n            {props.profile && props.profile.contacts.github &&\r\n            <p>Мой репозиторий на github: {props.profile.contacts.github}</p>}\r\n            {props.profile && props.profile.contacts.mainLink &&\r\n            <p>Страница в mainLink: {props.profile.contacts.mainLink}</p>}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileData;","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {ProfileType} from \"../../../Types/types\";\r\nimport {Field, Form} from \"react-final-form\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n    addChangeAvatar: (file: any) => void\r\n    changeInfoButton: (profile: any) => void\r\n    changeProfile: (profile: any) => void\r\n}\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = (props) => {\r\n    debugger\r\n    let onSubmit = (value: any) => {\r\n        let profile = {...value, fullName: props.profile && props.profile.fullName, lookingForAJob: isChecked}\r\n        props.changeProfile(profile)\r\n    }\r\n\r\n    const [isChecked, setIsChecked] = useState<boolean | null>(props.profile && props.profile.lookingForAJob)\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({handleSubmit}) => (\r\n                    <form action=\"\" onSubmit={handleSubmit}>\r\n                        <button className={s.editButton}>Save profile</button>\r\n                        <button onClick={props.changeInfoButton} className={s.editButton}>Don't save changes</button>\r\n                        <p>About Me:</p>\r\n                        <Field component={\"input\"} type={'text'} name={'aboutMe'}\r\n                               initialValue={props.profile && props.profile.aboutMe}\r\n                               className={s.form}/>\r\n                        <p>Ищешь работу: </p>\r\n                        <span className={s.checkbox} onClick={() => setIsChecked(!isChecked)}>\r\n                             <Field component={\"input\"} type=\"checkbox\" name={'lookingForAJob'} checked={isChecked}/>\r\n                             <span className={s.wrapper}>\r\n                                  <i className={s.check}></i>\r\n                             </span>\r\n                        </span>\r\n                        <p>Описание работы: </p>\r\n                        <Field component={\"input\"} type={'text'}\r\n                               name={'lookingForAJobDescription'}\r\n                               initialValue={props.profile && props.profile.lookingForAJobDescription}\r\n                               className={s.form}/>\r\n                        <p className={s.contacts}>Контакты</p>\r\n                        <p>Страница в facebook: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.facebook'}\r\n                               initialValue={props.profile && props.profile.contacts.facebook}\r\n                               className={s.form}/>\r\n                        <p>Мой веб-сайт: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.website'}\r\n                               initialValue={props.profile && props.profile.contacts.website}\r\n                               className={s.form}/>\r\n                        <p>Страница ВКонтакте: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.vk'}\r\n                               initialValue={props.profile && props.profile.contacts.vk}\r\n                               className={s.form}/>\r\n                        <p>Страница в twitter: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.twitter'}\r\n                               initialValue={props.profile && props.profile.contacts.twitter}\r\n                               className={s.form}/>\r\n                        <p>Страница в instagram:</p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.instagram'}\r\n                               initialValue={props.profile && props.profile.contacts.instagram}\r\n                               className={s.form}/>\r\n                        <p>Мой канал на youtube: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.youtube'}\r\n                               initialValue={props.profile && props.profile.contacts.youtube}\r\n                               className={s.form}/>\r\n                        <p>Мой репозиторий на github: </p>\r\n                        <Field component={'input'} type={'text'}\r\n                               name={'contacts.github'}\r\n                               initialValue={props.profile && props.profile.contacts.github}\r\n                               className={s.form}/>\r\n                        <p>Страница в mainLink: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.mainLink'}\r\n                               initialValue={props.profile && props.profile.contacts.mainLink}\r\n                               className={s.form}/>\r\n\r\n                    </form>\r\n                )}\r\n            />\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileDataForm;","import s from './AvavatarProfile.module.css'\r\nimport avatarUser from \"../../../../assets/images/user.png\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUserEdit} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    photo:  string | null\r\n    addChangeAvatar: (file:any) => void\r\n}\r\n\r\n\r\nconst AvatarProfile: React.FC<PropsType> = (props) => {\r\n\r\n    let onChangeAvatarMe = (e: any) => {\r\n        if (e.target.files.length)\r\n            props.addChangeAvatar(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img className={s.avatar}\r\n                 src={props.photo != null ? props.photo : avatarUser}/>\r\n            {!props.isOwner && <div className={s.blockInput}>\r\n                <input type={\"file\"} onChange={onChangeAvatarMe} id={'avatar'} className={s.inputPhoto}/>\r\n                <label htmlFor=\"avatar\" className={s.fakeInputPhoto}>\r\n                    <div className={s.blockFakeInputPhoto}>\r\n                        <FontAwesomeIcon icon={faUserEdit} className={s.iconFakeInputPhoto}/>\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvatarProfile;","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport './StatusProfile.css'\r\nimport {updateUserStatus} from \"../../../../redux/profileReducer\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\n\r\nlet StatusProfileWithHook: React.FC<PropsType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(false);\r\n    let [status, setStatus] = useState<string>(props.status)\r\n\r\n    let activeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let removeEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n            setStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {!props.isOwner ? (!editMode ? <div onDoubleClick={activeEditMode} className='StatusProfile_status'>\r\n                    {status ? status : 'Введите статус'}\r\n                </div> :\r\n                <div className='StatusProfile_inputBlock'><input autoFocus={true}\r\n                                                                 onChange={onStatusChange} value={status}\r\n                                                                 type=\"text\" className='StatusProfile_input'/>\r\n                    <button onClick={removeEditMode} className='StatusProfile_inputButton'>\r\n                        <i className='check'></i>\r\n                    </button>\r\n                </div>) : <div className='StatusProfile_status'>{status ? status :'Статус не введён'}</div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusProfileWithHook;","import React, {useState} from \"react\";\r\nimport {ProfileType} from \"../../../Types/types\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport AvatarProfile from \"./AvavatarProfile/AvavatarProfile\";\r\nimport StatusProfileWithHook from \"./StatusProfile/StatusProfileWithHook\";\r\n\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n    addChangeAvatar: (file: any) => void\r\n    changeProfile: (profile: any) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <img className={s.profile_logo}\r\n                 src=\"https://www.komandirovka.ru/upload/save_file33/bf5/bf5c6f100d3d620c48787b3714cb4fea.jpg\" alt=\"\"/>\r\n            <div className={s.descriptions}>\r\n                <div className={s.descriptions_logo}>\r\n                    <AvatarProfile isOwner={props.isOwner} photo={props.profile && props.profile.photos.large}\r\n                                   addChangeAvatar={props.addChangeAvatar}/>\r\n                </div>\r\n                <div className={s.descriptions_text}>\r\n                    <div className={s.descriptions_name}>\r\n                        {props.profile && props.profile.fullName}\r\n                    </div>\r\n                    <StatusProfileWithHook isOwner={props.isOwner} status={props.status}\r\n                                           updateUserStatus={props.updateUserStatus}/>\r\n\r\n                    <div className={s.descriptions_about}>\r\n                        {!editMode ? <ProfileData {...props} changeInfoButton={() => setEditMode(true)}/> :\r\n                            <ProfileDataForm {...props} changeProfile={props.changeProfile} changeInfoButton={() => setEditMode(false)}/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css';\r\nimport avatarUser from '../../../../assets/images/user.png'\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    photos: string | null\r\n    message: string\r\n    id: number\r\n    likes: number\r\n    deletePost: (id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n        return (\r\n        <div className={s.post}>\r\n            <div className={s.post_content}>\r\n                <img className={s.post_logo}\r\n                     src={props.photos ? props.photos : avatarUser}\r\n                     alt=\"avatar\"/>\r\n                <p className={s.post_text}>{props.message}</p>\r\n                <span onClick={() => {props.deletePost(props.id)}} className={s.delete}></span>\r\n            </div>\r\n            <button id='button' className={s.post_like}>\r\n                like\r\n            </button>\r\n            <div className={s.post_likes} id='like'>\r\n                {props.likes}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Post;","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required = (value:string) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength:number):FieldValidatorType => value => {\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const password: FieldValidatorType = value => {\r\n    const beginWithoutDigit = /^\\D.*$/\r\n    const withoutSpecialChars = /^[^-() /]*$/\r\n    const containsLetters = /^.*[a-zA-Z]+.*$/\r\n\r\n    if(beginWithoutDigit.test(value) && withoutSpecialChars.test(value) &&\r\n        containsLetters.test(value) && value.length >= 8) {\r\n        return undefined\r\n    }\r\n    return 'Error password'\r\n}\r\n\r\n\r\n","import s from './NewPost.module.css'\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/Validators/validator\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\ntype PropsType = {\r\n    addPost:(newPostText: string) => void\r\n}\r\n\r\nconst AddNewPost: React.FC<PropsType> = (props) => {\r\n    let addNewPost = (values: any) => {\r\n        props.addPost(values.inputNewPost)\r\n    }\r\n\r\n    const composeValidators = (...validators:any[]) => (value:any) =>\r\n        validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\n    return (\r\n        <Form onSubmit={addNewPost}>\r\n            {props => (\r\n                <form onSubmit={props.handleSubmit} className={s.newPost}>\r\n                    <Field component={Textarea} name='inputNewPost' className={s.newPost_textarea}\r\n                           placeholder='Введите текст нового поста'\r\n                           validate={composeValidators(required, maxLengthCreator(10))}/>\r\n                    <button disabled={props.hasValidationErrors && true} className={`${s.newPost_button} \r\n                    ${props.hasValidationErrors && s.disabled}`}>Send\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst NewPost: React.FC<PropsType> = (props) => {\r\n    return <AddNewPost addPost={props.addPost}/>\r\n}\r\n\r\n\r\nexport default NewPost;","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost:(newPostText: string) => void\r\n}\r\n\r\nconst NewPostContainer = connect<{}, MapDispatchPropsType, {}, AppStateType>(null, {addPost})(NewPost);\r\n\r\nexport default NewPostContainer;","import s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\nimport {deletePost} from \"../../../redux/profileReducer\";\r\nimport {PostDataType} from \"../../../Types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    postData: Array<PostDataType>\r\n    photos: string | null\r\n    deletePost: (id: number) => void\r\n}\r\n\r\nconst MyPosts: React.FC<PropsType> = (props) => {\r\n    let postsElement = props.postData.map(post => <Post message={post.message} likes={post.likesCount}\r\n                                                        photos={props.photos} key={post.id} id={post.id}\r\n                                                        deletePost={props.deletePost}/>)\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.posts_title}>\r\n                My Posts\r\n            </div>\r\n            <NewPostContainer/>\r\n            {postsElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport PreloaderUser from \"../Users/User/PreloaderUsers/PreloaderUsers\";\r\nimport {PostDataType, ProfileType} from \"../../Types/types\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile:  ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status:string) => void\r\n    addChangeAvatar: (file:any) => void\r\n    postData: Array<PostDataType>\r\n    deletePost: (id: number) => void\r\n    changeProfile: (profile: any) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    if (!props.profile) {\r\n        return (\r\n            <div className={s.preloaderBox}>\r\n                <PreloaderUser/>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateUserStatus={props.updateUserStatus} addChangeAvatar={props.addChangeAvatar} changeProfile={props.changeProfile}/>\r\n            <MyPosts photos={props.profile.photos.small} postData={props.postData} deletePost={props.deletePost}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    addChangeAvatar, deletePost,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    changeProfile\r\n} from \"../../redux/profileReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport Error404 from \"../common/Error404/Error404\";\r\nimport {PostDataType, ProfileType} from \"../../Types/types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    authorizedUserId: null | number,\r\n    profile: ProfileType | null,\r\n    postData: Array<PostDataType>,\r\n    status: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateUserStatus: (status: string) => void\r\n    addChangeAvatar: (file: any) => void\r\n    deletePost: (id: number) => void\r\n    changeProfile: (profile: any) => void\r\n}\r\n\r\ntype OwnProps = {\r\n    match: any\r\n    history: any\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnProps\r\n\r\nclass ProfileContainerAPI extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        if (userId) {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getUserStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps :PropsType) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if(Number(this.props.match.params.userId) === this.props.authorizedUserId) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n\r\n        // if(typeof this.props.profile === 'string') {\r\n        //    return <Error404/>\r\n        // }\r\n\r\n        return (\r\n            <Profile isOwner = {!!this.props.match.params.userId} {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) : MapStatePropsType => {\r\n    return {\r\n        profile: state.profileReducer.profile,\r\n        postData: state.profileReducer.postData,\r\n        status: state.profileReducer.status,\r\n        authorizedUserId: state.auth.id,\r\n    }\r\n}\r\n\r\n\r\nconst ProfileContainer = compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnProps, AppStateType>(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n        addChangeAvatar,\r\n        deletePost,\r\n        changeProfile\r\n    }),\r\n    withRouter,\r\n)(ProfileContainerAPI)\r\n\r\n// const WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n//\r\n// export default withAuthRedirect(connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent));\r\n\r\nexport default ProfileContainer\r\n\r\n","import s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userNull from '../../../src/assets/images/user.png';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    userPhoto: string | null\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.header_logo}>RUSLNETWORK</div>\r\n            {props.isAuth ?\r\n                <NavLink to='/profile' className={s.loginBlock}>\r\n                    <span>\r\n                        <div className={s.blockPhoto}>\r\n                            {props.userPhoto ? <img src={props.userPhoto} alt=\"\" className={s.photo}/> :\r\n                                <img src={userNull} alt=\"\" className={s.photoNull}/>}\r\n                        </div>\r\n                    </span>\r\n                    <span>{props.login}</span>\r\n                    <button onClick={props.logout} className={s.buttonLogout}>Logout</button>\r\n                </NavLink>\r\n\r\n                : <NavLink to='/login' className={s.loginBlock} activeClassName={s.active}>\r\n                    Login\r\n                </NavLink>\r\n            }\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    userPhoto: string | null\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderComponent extends React.Component<PropsType> {\r\n\r\n    render() {\r\n        return (<Header {...this.props}/>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n        userPhoto: state.auth.userPhoto,\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {logout})(HeaderComponent);","import s from './InputMessage.module.css';\r\nimport {Field, Form} from \"react-final-form\";\r\n\r\ntype PropsType = {\r\n    addNewMessage: (message:string) => void\r\n}\r\n\r\nconst AddMessageForm: React.FC<PropsType> = (props) => {\r\ndebugger\r\n    let addNewMessage = (formData: any) => {\r\n        props.addNewMessage(formData.textAreaMessage)\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={addNewMessage}\r\n              render={({handleSubmit, form}) => (\r\n                  <form onSubmit={handleSubmit} className={s.inputMessage}>\r\n                      <Field component='textarea' placeholder='Введите новое сообщение'\r\n                             name='textAreaMessage' className={s.textMessage}/>\r\n                      <button className={s.buttonSend}>\r\n                          <img className={s.buttonImg} src=\"https://img.icons8.com/plumpy/96/000000/filled-sent.png\"\r\n                               alt=\"\"/>\r\n                      </button>\r\n                  </form>\r\n              )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst InputMessage: React.FC<PropsType> = (props) => {\r\n    return <AddMessageForm addNewMessage={props.addNewMessage}/>\r\n};\r\n\r\n\r\nexport default InputMessage;","import s from './Message.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.messageInto}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import s from './BlockMessage.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport {MessageType} from \"../../../Types/types\";\r\n\r\ntype PropsType = {\r\n    messageElement: Array<MessageType>\r\n}\r\n\r\nconst BlockMessage: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    let messageElement = props.messageElement.map(message => <Message key={message.id} message={message.message}/>)\r\n\r\n    return (\r\n            <div className={s.blockMessage}>\r\n                {messageElement}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default BlockMessage;","import s from './DialogsItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    avatarUser: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n\r\n    let path = '/dialog/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>\r\n                <img className={s.avatarUser} src={props.avatarUser} alt='avatar'/>\r\n                <span className={s.nameUser}>\r\n                    {props.name}\r\n                </span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import s from './BlockDialogsItem.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport {DialogType} from \"../../../Types/types\";\r\n\r\ntype PropsType = {\r\n    dialogElement: Array<DialogType>\r\n}\r\n\r\nconst BlockDialogsItem: React.FC<PropsType> = (props) => {\r\n\r\n    let dialogElement = props.dialogElement.map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}\r\n                                                                          avatarUser={dialog.avatarUser}/>)\r\n\r\n    return (\r\n\r\n            <div className={s.dialogs_items}>\r\n                {dialogElement}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default BlockDialogsItem;","import s from './Dialogs.module.css';\r\nimport InputMessage from \"./InputMessage/InputMessage\";\r\nimport BlockMessage from \"./BlockMessage/BlockMessage\";\r\nimport BlockDialogsItem from \"./BlockDialogsItem/BlockDialogsItem\";\r\nimport {DialogType, MessageType} from \"../../Types/types\";\r\n\r\ntype PropsType = {\r\n    addNewMessage: (message:string) => void\r\n    messageElement: Array<MessageType>\r\n    dialogElement: Array<DialogType>\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <BlockDialogsItem dialogElement={props.dialogElement}/>\r\n            <div className={s.messages}>\r\n                <BlockMessage  messageElement={props.messageElement}/>\r\n                <InputMessage addNewMessage={props.addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nlet withAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Redirect to='login'/>\r\n        }\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","import Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {addNewMessage} from \"../../redux/dialogsReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {DialogType, MessageType} from \"../../Types/types\";\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    addNewMessage: (message:string) => void\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    messageElement: Array<MessageType>\r\n    dialogElement: Array<DialogType>\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        messageElement: state.dialogsReducer.messageData,\r\n        dialogElement: state.dialogsReducer.dialogsData,\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose(withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {addNewMessage}))(Dialogs)\r\n\r\nexport default DialogsContainer;","import React from 'react'\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nconst WithSuspense = (Component) => {\r\n\r\n    const ComponentHOC = (props) => {\r\n        return <React.Suspense fallback={<div className={'preloaderSuspense'}>\r\n            <Preloader height={'500px'}\r\n                       width={'500px'} borderWidth={'40px'}/>\r\n        </div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n\r\n    return ComponentHOC\r\n}\r\n\r\nexport default WithSuspense;","export default __webpack_public_path__ + \"static/media/error_404.83d95d70.png\";","import error404 from \"../../../assets/images/error_404.png\";\r\nimport s from \"./Error404.module.css\"\r\nimport React from \"react\";\r\n\r\nconst Error404 = (props) => {\r\n    return (<div>\r\n            <img src={error404} className={s.imagesError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React from 'react'\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Setting from \"./components/Setting/Setting\";\nimport UsersContainer from \"./components/Users/UsersContainre\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderComponent from \"./components/Header/HeaderComponent\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport WithSuspense from \"./hoc/withSuspense\";\nimport Error404 from \"./components/common/Error404/Error404\";\nimport {AppStateType} from \"./redux/reduxStore\";\n\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\n\n\n// type MapStatePropsType = {\n//     id: number | null\n//     initialize: boolean\n// }\n//\n// type MapDispatchPropsType = {\n//     initializeApp: () => void\n// }\n//\n// type PropsType = MapStatePropsType & MapDispatchPropsType\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialize) {\n            return <div className='preloader'>\n                <Preloader height={'500px'} width={'500px'} borderWidth={'40px'}/>\n            </div>\n        }\n\n        return (\n            <HashRouter>\n                <div className='app-wrapper'>\n                    <HeaderComponent/>\n                    <NavBar/>\n                    <div className='app-content'>\n                        <Switch>\n                            <Route exact path='/' render={() => <Redirect to='/profile'/>}/>\n                            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                            <Route path='/dialog' render={() => <DialogsContainer/>}/>\n                            <Route path='/news' render={() => <News/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/setting' render={() => <Setting/>}/>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                            <Route path='/login' render={WithSuspense(Login)}/>\n                            <Route path='*' render={() => <Error404/>}/>\n                        </Switch>\n                    </div>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        id: state.auth.id,\n        initialize: state.app.initialized,\n    }\n}\n\nexport default connect(mapStateToProps, {initializeApp})(App);","import React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport store from \"./redux/reduxStore\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}