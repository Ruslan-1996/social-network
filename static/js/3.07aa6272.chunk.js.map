{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.tsx"],"names":["module","exports","LoginForm","props","useState","password","changeTypePassword","errorAuth","useSelector","state","auth","captchaURL","dispatch","useDispatch","onSubmit","formData","login","email","rememberMe","captcha","render","handleSubmit","action","component","Input","name","type","placeholder","className","s","input","inputPassword","icon","faEye","onClick","passwordIcon","faEyeSlash","src","alt","captchaImg","button","Login","isAuth","to"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,cAAgB,6BAA6B,aAAe,4BAA4B,WAAa,0BAA0B,OAAS,sBAAsB,UAAY,2B,kJCWhPC,EAAsB,SAACC,GAAW,IAAD,EAEEC,oBAAkB,GAFpB,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAW7BC,EAAYC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,aAC5DI,EAAaH,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKC,cAE7DC,EAAWC,cAMjB,OACI,cAAC,IAAD,CACIC,SANO,SAACC,GACZH,EAASI,YAAMD,EAASE,MAAOF,EAASV,SAAUU,EAASG,WAAYH,EAASI,WAM5EC,OAAQ,gBAAEC,EAAF,EAAEA,aAAF,OACJ,uBAAMC,OAAO,GAAGR,SAAUO,EAA1B,UACI,8BACI,cAAC,IAAD,CAAOE,UAAWC,IAAOC,KAAK,QAAQC,KAAK,OAAOC,YAAa,QACxDC,UAAWC,IAAEC,UAExB,gCACI,cAAC,IAAD,CAAOP,UAAWC,IAAOI,UAAS,UAAKC,IAAEC,MAAP,YAAgBD,IAAEE,eAC7CL,KAAMrB,EAAW,WAAa,OAAQoB,KAAK,WAAWE,YAAY,aACvEtB,EAEE,cAAC,IAAD,CAAiB2B,KAAMC,IAAOC,QAAS,kBAAM5B,GAAoBD,IAAWuB,UAAWC,IAAEM,eADzF,cAAC,IAAD,CAAiBH,KAAMI,IAAYF,QAAS,kBAAM5B,GAAoBD,IAAWuB,UAAWC,IAAEM,kBAGrG5B,GAAa,sBAAMqB,UAAWC,IAAEtB,UAAnB,SAA+BA,IAC7C,gCACI,cAAC,IAAD,CAAOgB,UAAU,QACVG,KAAM,WAAYD,KAAK,eAFlC,kBAICd,GACD,gCACI,qBAAK0B,IAAK1B,EAAY2B,IAAI,GAAGV,UAAWC,IAAEU,aAC1C,8BACI,cAAC,IAAD,CAAOhB,UAAU,QACVG,KAAM,OAAQD,KAAK,UAAUG,UAAWC,IAAEC,aAKzD,8BACI,wBAAQF,UAAWC,IAAEW,OAArB,4BAuBTC,UAfS,SAACtC,GAIrB,OAFeK,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKgC,UAGpD,cAAC,IAAD,CAAUC,GAAI,aAGrB,sBAAKf,UAAWC,IAAEb,MAAlB,UACI,uCACA,cAACd,EAAD,eAAeC","file":"static/js/3.07aa6272.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__C84rM\",\"input\":\"Login_input__2YEHv\",\"inputPassword\":\"Login_inputPassword__ZVvzH\",\"passwordIcon\":\"Login_passwordIcon__1zSmr\",\"captchaImg\":\"Login_captchaImg__2IElY\",\"button\":\"Login_button__2J8ft\",\"errorAuth\":\"Login_errorAuth__3mbJC\"};","import s from './Login.module.css';\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEye, faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {currentPage} from \"../../redux/usersSelectors\";\r\n\r\nconst LoginForm: React.FC = (props) => {\r\n\r\n    let [password, changeTypePassword] = useState<boolean>(true);\r\n\r\n    type LoginFormValuesType = {\r\n        email: string\r\n        password: string\r\n        rememberMe: boolean\r\n        captcha: string\r\n    }\r\n\r\n    const errorAuth = useSelector((state: AppStateType) => state.auth.errorAuth)\r\n    const captchaURL = useSelector((state: AppStateType) => state.auth.captchaURL)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({handleSubmit}) => (\r\n                <form action=\"\" onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field component={Input} name='email' type='text' placeholder={'Email'}\r\n                               className={s.input}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field component={Input} className={`${s.input} ${s.inputPassword}`}\r\n                               type={password ? 'password' : 'text'} name='password' placeholder='Password'/>\r\n                        {!password ?\r\n                            <FontAwesomeIcon icon={faEyeSlash} onClick={() => changeTypePassword(!password)} className={s.passwordIcon}/> :\r\n                            <FontAwesomeIcon icon={faEye} onClick={() => changeTypePassword(!password)} className={s.passwordIcon}/>}\r\n                    </div>\r\n                    {errorAuth && <span className={s.errorAuth}>{errorAuth}</span>}\r\n                    <div>\r\n                        <Field component=\"input\"\r\n                               type={'checkbox'} name='rememberMe'/> remember me\r\n                    </div>\r\n                    {captchaURL &&\r\n                    <div>\r\n                        <img src={captchaURL} alt=\"\" className={s.captchaImg}/>\r\n                        <div>\r\n                            <Field component=\"input\"\r\n                                   type={'text'} name='captcha' className={s.input}/>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n\r\n                    <div>\r\n                        <button className={s.button}>Login</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nconst Login: React.FC = (props) => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={s.login}>\r\n            <h1>Login</h1>\r\n            <LoginForm {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login"],"sourceRoot":""}