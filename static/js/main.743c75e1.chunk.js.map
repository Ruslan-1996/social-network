{"version":3,"sources":["api/api.ts","components/Profile/ProfileInfo/ProfileInfo.module.css","components/NavBar/NavBar.module.css","components/Users/User/User.module.css","components/Friends/User/User.module.css","api/users-api.ts","components/Header/Header.module.css","api/auth-api.ts","api/security-api.ts","redux/authReducer.ts","api/profile-api.ts","components/NavBar/FriendsSideBar/NavFriendItem/NavFriendItem.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/AvavatarProfile/AvavatarProfile.module.css","redux/sideBarReducer.ts","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/NewPost/NewPost.module.css","components/common/FormsControls/FormsControls.module.css","components/Dialogs/InputMessage/InputMessage.module.css","components/Dialogs/BlockDialogsItem/DialogItem/DialogsItem.module.css","components/Friends/Friends.module.css","components/NavBar/FriendsSideBar/FriendsSideBar.module.css","components/common/SearchForm/SearchForm.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/BlockMessage/Message/Message.module.css","components/common/FormsControls/FormsControls.tsx","components/News/News.module.css","components/Music/Music.module.css","components/Setting/Setting.module.css","components/Users/User/PreloaderUsers/PreloaderUsers.module.css","components/Dialogs/BlockMessage/BlockMessage.module.css","components/Dialogs/BlockDialogsItem/BlockDialogsItem.module.css","components/common/Error404/Error404.module.css","components/Friends/User/PreloaderUsers/PreloaderUsers.module.css","reportWebVitals.js","redux/profileReducer.ts","redux/dialogsReducer.ts","redux/usersReducer.ts","redux/appReducer.ts","redux/friendsReducer.ts","redux/reduxStore.ts","assets/images/user.png","components/NavBar/FriendsSideBar/NavFriendItem/NavFriendItem.tsx","components/NavBar/FriendsSideBar/FriendsSideBar.tsx","components/NavBar/FriendsSideBar/FriendsSideBarContainer.tsx","components/NavBar/NavBar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Setting.tsx","components/common/Preloader/PreloaderButton/PreloaderButton.jsx","components/Users/User/User.tsx","components/common/Paginator/Paginator.tsx","utils/Validators/validator.ts","redux/usersSelectors.ts","components/common/SearchForm/SearchForm.tsx","components/Users/Users.tsx","components/common/Preloader/Preloader.jsx","components/Users/User/PreloaderUsers/PreloaderUsers.tsx","components/Users/UsersContainre.tsx","components/Profile/ProfileInfo/ProfileData.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/AvavatarProfile/AvatarProfile.tsx","components/Profile/ProfileInfo/StatusProfile/StatusProfileWithHook.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/NewPost/NewPost.tsx","components/Profile/MyPosts/NewPost/NewPostContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/Header/HeaderComponent.tsx","components/Dialogs/InputMessage/InputMessage.tsx","components/Dialogs/BlockMessage/Message/Message.tsx","components/Dialogs/BlockMessage/BlockMessage.tsx","components/Dialogs/BlockDialogsItem/DialogItem/DialogsItem.tsx","components/Dialogs/BlockDialogsItem/BlockDialogsItem.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","hoc/withSuspense.tsx","assets/images/error_404.png","components/common/Error404/Error404.js","components/Friends/User/User.tsx","components/Friends/Friends.tsx","components/Friends/User/PreloaderUsers/PreloaderUsers.tsx","components/Friends/FriendsContainre.tsx","App.tsx","index.tsx"],"names":["ResultCodesEnum","ResultCodesForCaptchaEnum","instance","axios","create","baseURL","withCredentials","headers","module","exports","usersAPI","getUsers","currentPage","pageSize","friend","term","get","then","response","data","follow","id","post","res","unfollow","delete","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATA","ADD_USER_PHOTO","ERROR_AUTH","SET_CAPTCHA_URL_SUCCESS","initialState","login","isFetching","isAuth","userPhoto","errorAuth","captchaURL","actions","type","payload","message","addUserPhoto","userId","dispatch","a","profileAPI","getUserProfile","photos","small","resultCode","Success","getAuthUser","getSideBarUsers","CaptchaIsRequired","url","messages","logout","getState","meData","auth","authReducer","state","action","getStatus","updateStatus","status","put","updateAvatar","file","formData","FormData","append","updateProfileInfo","profile","SET_SIDE_BAR_USERS","users","items","sideBarReducer","array","i","numberIsInArray","rand","Math","floor","random","length","j","push","console","log","Textarea","input","meta","props","hasError","error","touched","className","s","formControl","errorInput","Input","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","DELETE_POST","SET_USERS_PROFILE","TOGGLE_PRELOADER","SET_USER_STATUS","ADD_AVATAR","postData","likesCount","isPreloader","setUserProfile","setUserStatus","setPreloaderToggle","preloader","profileReducer","newPost","newPostText","filter","p","postId","ADD_MESSAGE","messageData","dialogsData","name","avatarUser","dialogsReducer","newMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_USERS_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_PROGRESS","SET_FILTER_USERS","usersData","totalUsersCount","followingInProgress","followSuccess","unfollowSuccess","setUsers","setTotalUsersCount","toggleFollowingProgress","setFilterUsers","totalCount","usersReducer","map","u","followed","numberPage","INITIALIZED_SUCCESS","initialized","appReducer","friendsReducer","rootReducers","combineReducers","app","store","createStore","applyMiddleware","thunk","window","NavFriend","friendItem","src","userNull","alt","to","friendItemPreloader","FriendsSideBar","useDispatch","useSelector","useEffect","nameUserElement","user","buttonFriends","blockFriends","FriendsSideBarContainer","connect","NavBar","nav","item","item_first","activeClassName","active","item_setting","News","news","Music","music","Setting","setting","PreloaderButton","User","avatarBlock","large","authorizedUserId","disabled","some","onClick","buttonFollow","profileUser","aboutUser","nameUser","bio","blockCountry","countyUser","cityUser","Paginator","portionSize","pagesCount","ceil","totalItemsCount","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","buttonChangeList","onPageChanged","numbersPage","selectedPage","required","value","getUsersData","getPageSize","getTotalUsersCount","getCurrentPage","getIsPreloader","getFollowingInProgress","getAuthorizedUserId","getFilterUsers","SearchForm","React","memo","initialValues","validate","values","onSubmit","setSubmitting","onFilterChanged","isSubmitting","placeholder","button","Users","setUsersCurrentPage","followAC","unfollowAC","usersDataComponent","wrapper","menu","onChange","e","Number","target","selectPage","optionPage","Preloader","style","height","width","borderWidth","PreloaderUser","UserAPIComponent","PreloaderUsers","ProfileData","isOwner","changeInfoButton","editButton","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","ProfileDataForm","isChecked","setIsChecked","fullName","changeProfile","render","handleSubmit","component","initialValue","form","checkbox","checked","check","AvatarProfile","avatar","photo","blockInput","files","addChangeAvatar","inputPhoto","htmlFor","fakeInputPhoto","blockFakeInputPhoto","icon","faUserEdit","iconFakeInputPhoto","StatusProfileWithHook","editMode","setEditMode","setStatus","autoFocus","updateUserStatus","onDoubleClick","ProfileInfo","profile_logo","descriptions","descriptions_logo","descriptions_text","descriptions_name","descriptions_about","Post","post_content","post_logo","post_text","deletePost","post_like","post_likes","likes","AddNewPost","composeValidators","validators","reduce","validator","undefined","addPost","inputNewPost","newPost_textarea","maxLength","hasValidationErrors","newPost_button","NewPost","NewPostContainer","MyPosts","postsElement","posts","posts_title","MyPostMemorized","Profile","preloaderBox","ProfileContainerAPI","this","match","params","history","getUserStatus","refreshProfile","prevProps","Component","ProfileContainer","compose","withRouter","Header","header","header_logo","loginBlock","blockPhoto","photoNull","buttonLogout","HeaderComponent","AddMessageForm","addNewMessage","textAreaMessage","inputMessage","textMessage","buttonSend","buttonImg","InputMessage","Message","messageInto","BlockMessage","messageElement","blockMessage","DialogItem","path","dialog","BlockDialogsItem","dialogElement","dialogs_items","Dialogs","dialogs","mapStateToProps","withAuthRedirect","restProps","DialogsContainer","WithSuspense","Suspense","fallback","Error404","error404","imagesError","Friends","FriendsContainer","Login","lazy","App","initializeApp","initialize","exact","promise","Promise","all","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.743c75e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {UserType} from \"../Types/types\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '3588cd03-a8ff-4f0d-9d81-9d9c39c14fdb'\r\n    }\r\n})\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\nexport enum ResultCodesEnum  {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport enum ResultCodesForCaptchaEnum  {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10,\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_logo\":\"ProfileInfo_profile_logo__1gGmI\",\"descriptions\":\"ProfileInfo_descriptions__3FOxw\",\"descriptions_logo\":\"ProfileInfo_descriptions_logo__v86Dv\",\"descriptions_text\":\"ProfileInfo_descriptions_text__1Bk_o\",\"descriptions_name\":\"ProfileInfo_descriptions_name__22uMQ\",\"descriptions_about\":\"ProfileInfo_descriptions_about__7Fcjm\",\"contacts\":\"ProfileInfo_contacts__2uQFH\",\"editButton\":\"ProfileInfo_editButton__pSVk-\",\"form\":\"ProfileInfo_form__3xfph\",\"checkbox\":\"ProfileInfo_checkbox__1mNzV\",\"wrapper\":\"ProfileInfo_wrapper__uBebX\",\"check\":\"ProfileInfo_check__2cAY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1ZsFP\",\"item_first\":\"NavBar_item_first__MOfNm\",\"item\":\"NavBar_item__2oFxI\",\"active\":\"NavBar_active__1EKNC\",\"item_setting\":\"NavBar_item_setting__3YL6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__10vDW\",\"avatarBlock\":\"User_avatarBlock__12Mle\",\"avatarUser\":\"User_avatarUser__1CpwV\",\"buttonFollow\":\"User_buttonFollow__1CNQl\",\"profileUser\":\"User_profileUser__1tSXC\",\"aboutUser\":\"User_aboutUser__1t7mg\",\"nameUser\":\"User_nameUser__2Op41\",\"blockCountry\":\"User_blockCountry__jcTk-\",\"countyUser\":\"User_countyUser__3341w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3ipR4\",\"avatarBlock\":\"User_avatarBlock__UNvSu\",\"avatarUser\":\"User_avatarUser__29V9V\",\"buttonFollow\":\"User_buttonFollow__28z0T\",\"profileUser\":\"User_profileUser__1aANy\",\"aboutUser\":\"User_aboutUser__YUmPQ\",\"nameUser\":\"User_nameUser__21eP7\",\"blockCountry\":\"User_blockCountry__3AHUa\",\"countyUser\":\"User_countyUser__GYjNJ\"};","import {GetItemsType, instance, APIResponseType} from \"./api\"\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10, friend: boolean | null = null, term: string = '') {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}` + (term ? `&term=${term}` : '') + (friend === null ? '': `&friend=${friend}`))\r\n            .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<APIResponseType<{}>>('follow/' + id)\r\n            .then(res => res.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<APIResponseType<{}>>('follow/' + id)\r\n            .then(res => res.data)\r\n    },\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1GvhD\",\"header_logo\":\"Header_header_logo__-GRmH\",\"loginBlock\":\"Header_loginBlock__2MFl8\",\"blockPhoto\":\"Header_blockPhoto__2jnVz\",\"photo\":\"Header_photo__63AOT\",\"photoNull\":\"Header_photoNull__19x9a\",\"active\":\"Header_active__SB70v\",\"buttonLogout\":\"Header_buttonLogout__2dCym\"};","import {instance, APIResponseType, ResultCodesForCaptchaEnum} from \"./api\";\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype LoginResponseType = {\r\n    userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>('auth/me').then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseType, ResultCodesForCaptchaEnum>>('auth/login', {\r\n            email, password, rememberMe, captcha\r\n        }).then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<APIResponseType>('auth/login')\r\n    }\r\n}","import {instance} from \"./api\";\r\n\r\ntype GetCaptchaURLResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    captchaURL() {\r\n        return instance.get<GetCaptchaURLResponseType>('/security/get-captcha-url').then(res => res.data)\r\n    }\r\n\r\n}","import {ResultCodesEnum, ResultCodesForCaptchaEnum} from \"../api/api\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\r\nimport {getSideBarUsers} from \"./sideBarReducer\";\r\nimport {initializeApp} from \"./appReducer\";\r\n\r\nconst SET_USER_DATA = 'ruslnetwork/authReducer/SET_USER_DATA';\r\nconst ADD_USER_PHOTO = 'ruslnetwork/authReducer/ADD_USER_PHOTO';\r\nconst ERROR_AUTH = 'ruslnetwork/authReducer/ERROR_AUTH';\r\nconst SET_CAPTCHA_URL_SUCCESS = 'ruslnetwork/authReducer/SET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nexport type InitialStateType = {\r\n    id: null | number,\r\n    login: null | string,\r\n    email: null | string,\r\n    isFetching: boolean,\r\n    isAuth: boolean,\r\n    userPhoto: null | string,\r\n    errorAuth: null | string,\r\n    captchaURL: null | string\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    userPhoto: '',\r\n    errorAuth: null,\r\n    captchaURL: null\r\n}\r\n\r\nexport type ActionsType = InferActionTypes<typeof actions>\r\n\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case ADD_USER_PHOTO:\r\n            return {\r\n                ...state,\r\n                userPhoto: action.userPhoto,\r\n            }\r\n        case ERROR_AUTH:\r\n            return {\r\n                ...state,\r\n                errorAuth: action.message,\r\n            }\r\n        case SET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaURL: action.captchaURL,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (id: number | null, login: string | null, email: string | null, isAuth: boolean) => ({\r\n        type: SET_USER_DATA,\r\n        payload: {id, login, email, isAuth}\r\n    } as const),\r\n    addUserPhotoSuccess: (userPhoto: string | null) => ({\r\n        type: ADD_USER_PHOTO,\r\n        userPhoto,\r\n    } as const),\r\n    errorAuth: (message: string) => ({\r\n        type: ERROR_AUTH,\r\n        message,\r\n    } as const),\r\n    setCaptchaURLSuccess: (captchaURL: string | null) => ({\r\n            type: SET_CAPTCHA_URL_SUCCESS,\r\n            captchaURL\r\n    } as const)\r\n}\r\n\r\n\r\nexport const addUserPhoto = (userId: number | null): ThunkType => {\r\n    return async (dispatch) => {\r\n        const data = await profileAPI.getUserProfile(userId)\r\n        dispatch(actions.addUserPhotoSuccess(data.photos.small))\r\n    }\r\n}\r\n\r\n\r\nconst setCaptchaURL = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        debugger\r\n        const data = await securityAPI.captchaURL()\r\n        dispatch(actions.setCaptchaURLSuccess(data.url))\r\n    }\r\n}\r\n\r\nexport const login = (email: any, password: any, rememberMe: any, captcha: any): ThunkType => {\r\n    return async (dispatch: any) => {\r\n        const data = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (data.resultCode === ResultCodesForCaptchaEnum.Success) {\r\n            dispatch(getAuthUser())\r\n            dispatch(actions.errorAuth(''))\r\n            dispatch(getSideBarUsers())\r\n        } else {\r\n            if (data.resultCode === ResultCodesForCaptchaEnum.CaptchaIsRequired) {\r\n                dispatch(setCaptchaURL())\r\n            }\r\n            dispatch(actions.errorAuth(data.messages[0]))\r\n        }\r\n        dispatch(actions.setCaptchaURLSuccess(null))\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n    return async (dispatch: any) => {\r\n        const response = await authAPI.logout()\r\n        if (response.data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(actions.setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAuthUser = (): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        const meData = await authAPI.me()\r\n        if (meData.resultCode === 0) {\r\n            dispatch(actions.setAuthUserData(meData.data.id, meData.data.login, meData.data.email, true))\r\n            await dispatch(addUserPhoto(getState().auth.id))\r\n        } else if (meData.resultCode === 1) {\r\n            dispatch(actions.setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import {instance, APIResponseType, ResultCodesEnum} from \"./api\";\r\nimport {PhotosType, ProfileType} from \"../Types/types\";\r\n\r\ntype UpdateAvatarType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number | null) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {\r\n            status: status,\r\n        }).then(res => res.data)\r\n    },\r\n    updateAvatar(file: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n        return instance.put<APIResponseType<UpdateAvatarType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    updateProfileInfo(profile: any) {\r\n        return instance.put<APIResponseType>('profile', profile)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendItem\":\"NavFriendItem_friendItem__3tREF\",\"friendItemPreloader\":\"NavFriendItem_friendItemPreloader__3GrP3\",\"avatarUser\":\"NavFriendItem_avatarUser__2Q4fg\",\"name\":\"NavFriendItem_name__2_AbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1cgbX\",\"post_content\":\"Post_post_content__22nR6\",\"post_logo\":\"Post_post_logo__3iji_\",\"post_text\":\"Post_post_text__1m5Mt\",\"post_like\":\"Post_post_like__NnLKi\",\"post_likes\":\"Post_post_likes__ZRgdt\",\"delete\":\"Post_delete__3n7Q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"AvavatarProfile_avatar__17d2M\",\"inputPhoto\":\"AvavatarProfile_inputPhoto__3bOgk\",\"blockInput\":\"AvavatarProfile_blockInput__3TjVq\",\"blockFakeInputPhoto\":\"AvavatarProfile_blockFakeInputPhoto__2mf4v\",\"iconFakeInputPhoto\":\"AvavatarProfile_iconFakeInputPhoto__1bFek\"};","import {usersAPI} from \"../api/users-api\"\r\nimport {UserType} from \"../Types/types\";\r\nimport {AppStateType} from \"./reduxStore\";\r\nimport {initializeApp} from \"./appReducer\";\r\n\r\nconst SET_SIDE_BAR_USERS = 'SET_SIDE_BAR_USERS'\r\n\r\n\r\ntype InitialStateType = {\r\n    users: Array<UserType>\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n}\r\n\r\nconst sideBarReducer = (state = initialState, action: SetSideBarUsersActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_SIDE_BAR_USERS:\r\n            var array: Array<number> = [];\r\n            for(var i = 0; i < 3; i++) {\r\n                var numberIsInArray = false;\r\n                var rand = Math.floor(Math.random()*action.users.length)\r\n                for(var j = 0; j < array.length; j++){\r\n                    if(rand === array[j]) {\r\n                        numberIsInArray = true;\r\n                        i--;\r\n                    }\r\n                }\r\n                if(!numberIsInArray){\r\n                    array.push(rand);\r\n                }\r\n            }\r\n            console.log(array)\r\n            return {\r\n                ...state,\r\n                users: [action.users[array[0]],\r\n                    action.users[array[1]],\r\n                    action.users[array[2]]]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetSideBarUsersActionType = {\r\n    type: typeof SET_SIDE_BAR_USERS,\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setSideBarUsers = (users: Array<UserType>): SetSideBarUsersActionType => {\r\n    return {\r\n        type: SET_SIDE_BAR_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const getSideBarUsers = () => {\r\n    return async (dispatch: any) => {\r\n        let data = await usersAPI.getUsers(1, 20, true, '')\r\n        dispatch(setSideBarUsers(data.items))\r\n    }\r\n}\r\n\r\nexport default sideBarReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__2IDO-\",\"menu\":\"Users_menu__3LoF8\",\"selectPage\":\"Users_selectPage__3xoGZ\",\"optionPage\":\"Users_optionPage__ikGdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonChangeList\":\"Paginator_buttonChangeList__2Pcro\",\"numbersPage\":\"Paginator_numbersPage__2dMmH\",\"selectedPage\":\"Paginator_selectedPage__3N0Wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__gckab\",\"newPost_textarea\":\"NewPost_newPost_textarea__2Eb51\",\"newPost_button\":\"NewPost_newPost_button__3EsHI\",\"disabled\":\"NewPost_disabled__3z2-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1eqP1\",\"errorInput\":\"FormsControls_errorInput__Filto\",\"errorTextarea\":\"FormsControls_errorTextarea__stxTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputMessage\":\"InputMessage_inputMessage__lnSYt\",\"textMessage\":\"InputMessage_textMessage__2TeLS\",\"buttonSend\":\"InputMessage_buttonSend__3RzUJ\",\"buttonImg\":\"InputMessage_buttonImg__PPXw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__1uTuI\",\"active\":\"DialogsItem_active__1jgbh\",\"avatarUser\":\"DialogsItem_avatarUser__3Dwfb\",\"nameUser\":\"DialogsItem_nameUser__1JDz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__1SDZh\",\"selectPage\":\"Friends_selectPage__yT6LD\",\"optionPage\":\"Friends_optionPage__3y38L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockFriends\":\"FriendsSideBar_blockFriends__2iMJn\",\"buttonFriends\":\"FriendsSideBar_buttonFriends__1IB2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchForm_input__2kMH6\",\"button\":\"SearchForm_button__2T9ZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__13nXA\",\"preloaderBox\":\"Profile_preloaderBox__s-cO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__223X8\",\"posts_title\":\"MyPosts_posts_title__3tsFr\",\"newPost\":\"MyPosts_newPost__1RZDe\",\"newPost_textarea\":\"MyPosts_newPost_textarea__2G1bL\",\"newPost_button\":\"MyPosts_newPost_button__DKrux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1qLjX\",\"dialogs_items\":\"Dialogs_dialogs_items__3JY44\",\"messages\":\"Dialogs_messages__1yubI\",\"blockMessage\":\"Dialogs_blockMessage__1tLBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__16buQ\",\"messageInto\":\"Message_messageInto__dBjVq\"};","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={`${s.formControl} ${hasError && s.errorInput}`}>\r\n            <textarea {...input} {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={`${s.formControl} ${hasError && s.errorInput}`}>\r\n            <input {...input} {...props}/>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3SN8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__SNPKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting\":\"Setting_setting__3dyKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PreloaderUsers_wrapper__1HebR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockMessage\":\"BlockMessage_blockMessage__Ql4Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_items\":\"BlockDialogsItem_dialogs_items__1Ilm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imagesError\":\"Error404_imagesError__3CKE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PreloaderUsers_wrapper__2RXx2\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ResultCodesEnum} from \"../api/api\";\r\nimport {addUserPhoto} from \"./authReducer\";\r\nimport {PhotosType, PostDataType, ProfileType} from \"../Types/types\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst TOGGLE_PRELOADER = 'TOGGLE_PRELOADER';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst ADD_AVATAR = 'ADD_AVATAR';\r\n\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Hi, How are you?', likesCount: 189},\r\n        {id: 2, message: 'I\\'m Happy', likesCount: 95},\r\n    ] as Array<PostDataType>,\r\n    profile: null as ProfileType | null,\r\n    isPreloader: false,\r\n    status: '',\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let id = state.postData[state.postData.length - 1].id\r\n            let newPost = {\r\n                id: id + 1,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postData: state.postData.filter(p => p.id != action.postId)\r\n            }\r\n        case SET_USERS_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case TOGGLE_PRELOADER:\r\n            return {...state, isPreloader: action.preloader}\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status}\r\n        case ADD_AVATAR:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\ntype AddPostActionType = {\r\n    type: typeof ADD_POST,\r\n    newPostText: string\r\n}\r\n\r\nexport const addPost = (newPostText: string): AddPostActionType => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST,\r\n    postId: number\r\n}\r\n\r\nexport const deletePost = (postId: number): DeletePostActionType => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USERS_PROFILE,\r\n    profile: ProfileType | null\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileType | null): SetUserProfileActionType => {\r\n    return {\r\n        type: SET_USERS_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\ntype SetUserStatusActionType = {\r\n    type: typeof SET_USER_STATUS,\r\n    status: string\r\n}\r\n\r\nexport const setUserStatus = (status: string): SetUserStatusActionType => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\ntype SetPreloaderToggleActionType = {\r\n    type: typeof TOGGLE_PRELOADER\r\n    preloader: boolean\r\n}\r\n\r\nexport const setPreloaderToggle = (preloader: boolean): SetPreloaderToggleActionType => ({\r\n    type: TOGGLE_PRELOADER,\r\n    preloader\r\n})\r\n\r\n\r\ntype AddAvatarSuccessActionType = {\r\n    type: typeof ADD_AVATAR\r\n    photos: PhotosType\r\n}\r\n\r\nconst addAvatarSuccess = (photos: PhotosType): AddAvatarSuccessActionType => {\r\n    return {\r\n        type: ADD_AVATAR,\r\n        photos\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setUserProfile(null))\r\n        dispatch(setPreloaderToggle(true))\r\n        try {\r\n            const data = await profileAPI.getUserProfile(userId)\r\n            dispatch(setPreloaderToggle(false))\r\n            dispatch(setUserProfile(data))\r\n        } catch (error) {\r\n            // dispatch(setUserProfile(error.message))\r\n            // dispatch(setPreloaderToggle(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        const data = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(data))\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => {\r\n    return async (dispatch: any) => {\r\n        const data = await profileAPI.updateStatus(status)\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(setUserStatus(status))\r\n        }\r\n    }\r\n}\r\n\r\nexport const addChangeAvatar = (file: File) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        let data = await profileAPI.updateAvatar(file)\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(addAvatarSuccess(data.data.photos))\r\n        }\r\n        dispatch(addUserPhoto(getState().auth.id))\r\n    }\r\n}\r\n\r\nexport const changeProfile = (profile: any) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const userId = getState().auth.id\r\n        let response = await profileAPI.updateProfileInfo(profile)\r\n        if (response.data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getUserProfile(userId))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","import {DialogType, MessageType} from \"../Types/types\";\r\n\r\nconst ADD_MESSAGE = 'ADD-NEW-MESSAGE'\r\n\r\nlet initialState = {\r\n    messageData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Bye'},\r\n    ] as Array<MessageType>,\r\n\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Sun',\r\n            avatarUser: 'https://solarsystem.nasa.gov/system/basic_html_elements/11561_Sun.png'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Teacher',\r\n            avatarUser: 'https://ikeacity.by/UserFiles/products/images2/large/903/684/47/doska-molbert-ikea-mola-0.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Nikitka',\r\n            avatarUser: 'https://www.meme-arsenal.com/memes/5608fd17a92284aa78fdf6ec089a3c97.jpg'\r\n        },\r\n    ] as Array<DialogType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 1,\r\n                message: action.message,\r\n            }\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, newMessage],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionTypes = AddNewMessageType\r\n\r\ntype AddNewMessageType = {\r\n    type: typeof ADD_MESSAGE,\r\n    message: string\r\n}\r\n\r\nexport const addNewMessage = (message: string): AddNewMessageType => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        message\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n","import {usersAPI} from \"../api/users-api\";\r\nimport {UserType} from \"../Types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, BaseThunkType} from \"./reduxStore\";\r\nimport {ResultCodesEnum} from \"../api/api\";\r\nimport {compose} from \"redux\";\r\n\r\nconst FOLLOW = 'ruslnetwork/usersReducer/FOLLOW';\r\nconst UNFOLLOW = 'ruslnetwork/usersReducer/UNFOLLOW';\r\nconst SET_USERS = 'ruslnetwork/usersReducer/SET-USERS';\r\nconst SET_USERS_CURRENT_PAGE = 'ruslnetwork/usersReducer/SET_USERS_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'ruslnetwork/usersReducer/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_PRELOADER = 'ruslnetwork/usersReducer/TOGGLE_PRELOADER';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'ruslnetwork/usersReducer/TOGGLE_IS_FOLLOWING_PROGRESS';\r\nconst SET_FILTER_USERS = 'ruslnetwork/usersReducer/SET_FILTER_USERS'\r\n\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UserType>,\r\n    pageSize: 20,\r\n    totalUsersCount: 11,\r\n    currentPage: 1,\r\n    isPreloader: true,\r\n    followingInProgress: [] as Array<number>, // array of users id\r\n    filter: '',\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, usersData: [...action.users]}\r\n        case SET_USERS_CURRENT_PAGE:\r\n            return {...state, currentPage: action.numberPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_PRELOADER:\r\n            return {...state, isPreloader: action.preloader}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.preloader ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id != action.userId),\r\n            }\r\n        case SET_FILTER_USERS:\r\n            return {\r\n                ...state,\r\n                filter: action.filter\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsType = FollowSuccessActionType\r\n    | UnfollowSuccessActionType\r\n    | SetUsersActionType\r\n    | SetUsersCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | SetPreloaderToggleActionType\r\n    | ToggleFollowingProgressActionType\r\n    | SetFilterUsersType\r\n\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\r\n\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\n\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\r\n\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\n\r\ntype SetUsersCurrentPageActionType = {\r\n    type: typeof SET_USERS_CURRENT_PAGE\r\n    numberPage: number\r\n}\r\n\r\nexport const setUsersCurrentPage = (numberPage: number): SetUsersCurrentPageActionType => ({\r\n    type: SET_USERS_CURRENT_PAGE,\r\n    numberPage\r\n})\r\n\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: number\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n})\r\n\r\ntype SetPreloaderToggleActionType = {\r\n    type: typeof TOGGLE_PRELOADER,\r\n    preloader: boolean\r\n}\r\n\r\nexport const setPreloaderToggle = (preloader: boolean): SetPreloaderToggleActionType => ({\r\n    type: TOGGLE_PRELOADER,\r\n    preloader\r\n})\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    preloader: boolean,\r\n    userId: number\r\n}\r\n\r\nexport const toggleFollowingProgress = (preloader: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    preloader,\r\n    userId\r\n})\r\n\r\ntype SetFilterUsersType = {\r\n    type: typeof SET_FILTER_USERS\r\n    filter: string\r\n}\r\n\r\nexport const setFilterUsers = (filter: string): SetFilterUsersType => {\r\n    return {\r\n        type: SET_FILTER_USERS,\r\n        filter\r\n    }\r\n}\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number, friend: boolean | null = null, term: string =''): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(setPreloaderToggle(true))\r\n        dispatch(setFilterUsers(term))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize, null, term)\r\n        dispatch(setPreloaderToggle(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const followAC = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let data = await usersAPI.follow(userId)\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const unfollowAC = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let data = await usersAPI.unfollow(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import {getAuthUser} from \"./authReducer\";\r\nimport {getSideBarUsers} from \"./sideBarReducer\";\r\nimport {AppStateType, InferActionTypes} from \"./reduxStore\";\r\n\r\nconst INITIALIZED_SUCCESS = 'ruslnetwork/appReducer/INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false,\r\n}\r\n\r\nexport type ActionType = InferActionTypes<typeof actions>\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: INITIALIZED_SUCCESS})\r\n}\r\n\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch: any) => {\r\n       let promise = dispatch(getAuthUser());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(actions.initializedSuccess());\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n","import {usersAPI} from \"../api/users-api\";\r\nimport {UserType} from \"../Types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, BaseThunkType} from \"./reduxStore\";\r\nimport {ResultCodesEnum} from \"../api/api\";\r\n\r\nconst FOLLOW = 'ruslnetwork/usersReducer/FOLLOW';\r\nconst UNFOLLOW = 'ruslnetwork/usersReducer/UNFOLLOW';\r\nconst SET_USERS = 'ruslnetwork/usersReducer/SET-USERS';\r\nconst SET_USERS_CURRENT_PAGE = 'ruslnetwork/usersReducer/SET_USERS_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'ruslnetwork/usersReducer/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_PRELOADER = 'ruslnetwork/usersReducer/TOGGLE_PRELOADER';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'ruslnetwork/usersReducer/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UserType>,\r\n    pageSize: 20,\r\n    totalUsersCount: 11,\r\n    currentPage: 1,\r\n    isPreloader: true,\r\n    followingInProgress: [] as Array<number>, // array of users id\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst friendsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, usersData: [...action.users]}\r\n        case SET_USERS_CURRENT_PAGE:\r\n            return {...state, currentPage: +action.numberPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case TOGGLE_PRELOADER:\r\n            return {...state, isPreloader: action.preloader}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.preloader ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id != action.userId),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsType = FollowSuccessActionType\r\n    | UnfollowSuccessActionType\r\n    | SetUsersActionType\r\n    | SetUsersCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | SetPreloaderToggleActionType\r\n    | ToggleFollowingProgressActionType\r\n\r\ntype ThunkType = BaseThunkType<ActionsType>\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\r\n\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\n\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\r\n\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\n\r\ntype SetUsersCurrentPageActionType = {\r\n    type: typeof SET_USERS_CURRENT_PAGE\r\n    numberPage: number\r\n}\r\n\r\nexport const setUsersCurrentPage = (numberPage: number): SetUsersCurrentPageActionType => ({\r\n    type: SET_USERS_CURRENT_PAGE,\r\n    numberPage\r\n})\r\n\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: number\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n})\r\n\r\ntype SetPreloaderToggleActionType = {\r\n    type: typeof TOGGLE_PRELOADER,\r\n    preloader: boolean\r\n}\r\n\r\nexport const setPreloaderToggle = (preloader: boolean): SetPreloaderToggleActionType => ({\r\n    type: TOGGLE_PRELOADER,\r\n    preloader\r\n})\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    preloader: boolean,\r\n    userId: number\r\n}\r\n\r\nexport const toggleFollowingProgress = (preloader: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    preloader,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(setPreloaderToggle(true))\r\n        let data = await usersAPI.getUsers(1, pageSize, true, '')\r\n        dispatch(setPreloaderToggle(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let data = await usersAPI.follow(userId)\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let data = await usersAPI.unfollow(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport default friendsReducer;\r\n","import {Action, applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sideBarReducer from \"./sideBarReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\n\r\nlet rootReducers = combineReducers({\r\n    profileReducer: profileReducer,\r\n    dialogsReducer: dialogsReducer,\r\n    sideBarReducer: sideBarReducer,\r\n    usersReducer: usersReducer,\r\n    friendsReducer: friendsReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\n\r\ntype RootReducerType = typeof rootReducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type InferActionTypes<T> = T extends {[keys: string]: (...args: any[])=> infer U} ? U : never\r\n\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","export default __webpack_public_path__ + \"static/media/user.affd02bf.png\";","import {NavLink} from \"react-router-dom\";\r\nimport s from \"./NavFriendItem.module.css\";\r\nimport userNull from '../../../../assets/images/user.png';\r\n\r\n\r\ntype PropsType = {\r\n    isPreloader: boolean\r\n    avatarUser: string | null\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst NavFriend: React.FC<PropsType> = (props) => {\r\n    return (<div>\r\n            {!props.isPreloader ? <NavLink to={`/profile/${props.id}`}\r\n                                           className={`${s.friendItem} ${props.isPreloader && s.friendItemPreloader}`}>\r\n                    <img src={props.avatarUser ? props.avatarUser : userNull}\r\n                         alt='avatar' className={s.avatarUser}/>\r\n                    <span className={s.name}>{props.name}</span>\r\n                </NavLink> :\r\n                <div className={s.friendItem}><img src={props.avatarUser ? props.avatarUser : userNull}\r\n                          alt='avatar' className={s.avatarUser}/>\r\n                    <span className={s.name}>{props.name}</span></div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NavFriend;","import s from './FriendsSideBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport NavFriend from \"./NavFriendItem/NavFriendItem\";\r\nimport {UserType} from \"../../../Types/types\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSideBarUsers} from \"../../../redux/sideBarReducer\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\ntype PropsType = {\r\n    nameUserElement: Array<UserType>\r\n    isPreloader: boolean\r\n}\r\n\r\nconst FriendsSideBar: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(getSideBarUsers())\r\n        }\r\n    }, [])\r\n\r\n    let nameUserElement = props.nameUserElement.map(user => <NavFriend name={user.name} avatarUser={user.photos.small}\r\n                                                                       key={user.id} id={user.id}\r\n                                                                       isPreloader={props.isPreloader}/>);\r\n\r\n    return (\r\n        <nav>\r\n            <NavLink to='/friends' className={s.buttonFriends}>\r\n                Friends\r\n            </NavLink>\r\n            <div className={s.blockFriends}>\r\n                {nameUserElement}\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default FriendsSideBar;","import FriendsSideBar from \"./FriendsSideBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserType} from \"../../../Types/types\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    nameUserElement: Array<UserType>\r\n    isPreloader: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return{\r\n        nameUserElement: state.sideBarReducer.users,\r\n        isPreloader: state.profileReducer.isPreloader\r\n    }\r\n}\r\n\r\nconst FriendsSideBarContainer = connect<MapStatePropsType, {}, {}, AppStateType>(mapStateToProps)(FriendsSideBar)\r\n\r\n\r\n\r\nexport default FriendsSideBarContainer;","import s from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsSideBarContainer from \"./FriendsSideBar/FriendsSideBarContainer\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.item_first}`}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialog' activeClassName={s.active}>Message</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.item_setting}`}>\r\n                <NavLink to='/setting' activeClassName={s.active}>Setting</NavLink>\r\n            </div>\r\n            <FriendsSideBarContainer/>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.news}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import s from './Setting.module.css'\r\n\r\nconst Setting = () => {\r\n    return (\r\n        <div className={s.setting}>\r\n            Setting\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import React from \"react\";\r\nimport './PreloaderButton.css'\r\n\r\nlet PreloaderButton = (props) => {\r\n    return (<div className=\"lds-ellipsis\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>)\r\n}\r\n\r\nexport default PreloaderButton;","import React from 'react';\r\nimport s from './User.module.css'\r\nimport userNull from '../../../assets/images/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PreloaderButton from \"../../common/Preloader/PreloaderButton/PreloaderButton\";\r\nimport {UserType} from \"../../../Types/types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    authorizedUserId: number | null\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({user, ...props}) => {\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.avatarBlock}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={s.avatarUser} src={user.photos.large != null ? user.photos.large : userNull}\r\n                         alt=\"avatar\"/>\r\n                </NavLink>\r\n                {props.authorizedUserId === user.id ? null : (user.followed\r\n                    ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.unfollow(user.id)\r\n                    }}\r\n                              className={s.buttonFollow}>\r\n                        {props.followingInProgress.some(id => id === user.id) ? <PreloaderButton/> : 'Unfollow'}\r\n                    </button>\r\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.follow(user.id)\r\n                    }}\r\n                              className={s.buttonFollow}>\r\n                        {props.followingInProgress.some(id => id === user.id) ? <PreloaderButton/> : 'Follow'}\r\n                    </button>)}\r\n            </div>\r\n            <div className={s.profileUser}>\r\n                <div className={s.aboutUser}>\r\n                    <div className={s.nameUser}>{user.name}</div>\r\n                    <div className={s.bio}>{user.status}</div>\r\n                </div>\r\n                <div className={s.blockCountry}>\r\n                    <div className={s.countyUser}>country</div>\r\n                    <div className={s.cityUser}>city</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({portionSize = 20, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    let i = 1\r\n    for (i; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState<number>(Math.ceil(props.currentPage / portionSize))\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button disabled={portionNumber === 1 && true} className={s.buttonChangeList} onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Last\r\n            </button>\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => (\r\n                    <button key={p} onClick={() => props.onPageChanged(p)}\r\n                            className={`${s.numbersPage} ${props.currentPage === p && s.selectedPage}`}>\r\n                        {p}\r\n                    </button>\r\n                ))}\r\n            <button disabled={portionNumber === portionCount && true} className={s.buttonChangeList} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required = (value:string) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength:number):FieldValidatorType => value => {\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const password: FieldValidatorType = value => {\r\n    const beginWithoutDigit = /^\\D.*$/\r\n    const withoutSpecialChars = /^[^-() /]*$/\r\n    const containsLetters = /^.*[a-zA-Z]+.*$/\r\n\r\n    if(beginWithoutDigit.test(value) && withoutSpecialChars.test(value) &&\r\n        containsLetters.test(value) && value.length >= 8) {\r\n        return undefined\r\n    }\r\n    return 'Error password'\r\n}\r\n\r\n\r\n","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getUsersData = (state: AppStateType) => {\r\n    return state.usersReducer.usersData\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersReducer.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersReducer.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersReducer.currentPage\r\n}\r\n\r\nexport const getIsPreloader = (state: AppStateType) => {\r\n    return state.usersReducer.isPreloader\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersReducer.followingInProgress\r\n}\r\n\r\nexport const getAuthorizedUserId = (state: AppStateType) => {\r\n    return state.auth.id\r\n}\r\n\r\nexport const getFilterUsers = (state: AppStateType) => {\r\n    return state.usersReducer.filter\r\n}","import React from 'react';\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {required} from \"../../../utils/Validators/validator\";\r\nimport s from './SearchForm.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {getFilterUsers} from \"../../../redux/usersSelectors\";\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (term: string) => void\r\n}\r\n\r\nlet SearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const onSubmit = (value: { term: string }, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        props.onFilterChanged(value.term)\r\n    }\r\n\r\n    const filter = useSelector(getFilterUsers)\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{term: filter}}\r\n                validate={values => {\r\n                }}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({isSubmitting}) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\" placeholder={'Search'} validate={required} className={s.input}/>\r\n                        <button type=\"submit\" disabled={isSubmitting} className={s.button}>\r\n                            Submit\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SearchForm;","import React, {useEffect} from 'react';\r\nimport s from './Users.module.css'\r\nimport User from \"./User/User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport SearchForm from \"../common/SearchForm/SearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getAuthorizedUserId,\r\n    getCurrentPage,\r\n    getFilterUsers,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersData\r\n} from \"../../redux/usersSelectors\";\r\nimport {followAC, getUsers, setUsersCurrentPage, unfollowAC} from \"../../redux/usersReducer\";\r\n\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    currentPage: number\r\n\r\n}\r\n\r\n\r\nlet Users: React.FC<PropsType> = ({currentPage, pageSize}) => {\r\n\r\n    const usersData = useSelector(getUsersData)\r\n\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n    const authorizedUserId = useSelector(getAuthorizedUserId)\r\n    const filter = useSelector(getFilterUsers)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (numberPage: number) => {\r\n        dispatch(setUsersCurrentPage(numberPage))\r\n        dispatch(getUsers(numberPage, pageSize, null, filter));\r\n    }\r\n\r\n    const onFilterChanged = (term: string) => {\r\n        dispatch(getUsers(1, pageSize, null, term))\r\n    }\r\n\r\n    const follow = (userId: number) => {\r\n        dispatch(followAC(userId))\r\n    }\r\n\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unfollowAC(userId))\r\n    }\r\n\r\n    let usersDataComponent = usersData.map(user => <User follow={follow} unfollow={unfollow}\r\n                                                      user={user} key={user.id}\r\n                                                      followingInProgress={followingInProgress}\r\n                                                      authorizedUserId={authorizedUserId}/>)\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    let i = 1\r\n    for (i; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let handleChange = (e: any) => {\r\n        onPageChanged(Number(e.target.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.menu}>\r\n                <select onChange={handleChange} value={currentPage} className={s.selectPage}>\r\n                    {pages.map(p => (\r\n                        <option key={p} className={s.optionPage}>{p} </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <SearchForm onFilterChanged={onFilterChanged}/>\r\n            </div>\r\n            {usersDataComponent}\r\n            <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                       currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n        </div>)\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport './Preloader.css'\r\n\r\nlet Preloader = (props) => {\r\n    return (<div className=\"lds-ring\" >\r\n        <div style={{height: `${props.height}`, width:`${props.width}`, borderWidth:`${props.borderWidth}`}}></div>\r\n        <div style={{height: `${props.height}`, width:`${props.width}`, borderWidth:`${props.borderWidth}`}}></div>\r\n        <div style={{height: `${props.height}`, width:`${props.width}`, borderWidth:`${props.borderWidth}`}}></div>\r\n        <div style={{height: `${props.height}`, width:`${props.width}`, borderWidth:`${props.borderWidth}`}}></div>\r\n    </div>)\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport s from './PreloaderUsers.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nlet PreloaderUser = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <Preloader height={'500px'} width={'500px'} borderWidth={'40px'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreloaderUser;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport PreloaderUsers from \"./User/PreloaderUsers/PreloaderUsers\";\r\nimport {getCurrentPage, getIsPreloader, getPageSize} from \"../../redux/usersSelectors\";\r\nimport {getUsers} from \"../../redux/usersReducer\";\r\n\r\nconst UserAPIComponent = React.memo(() => {\r\n\r\n    const isPreloader = useSelector(getIsPreloader)\r\n    const pageSize = useSelector(getPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getUsers(currentPage, pageSize))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isPreloader ? <PreloaderUsers/> : <Users pageSize={pageSize}\r\n                                                      currentPage={currentPage}/>}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default UserAPIComponent;","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {ProfileType} from \"../../../Types/types\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n    addChangeAvatar: (file: any) => void\r\n    changeInfoButton: (profile: any) => void\r\n}\r\n\r\nconst ProfileData: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {!props.isOwner &&\r\n            <button onClick={props.changeInfoButton} className={s.editButton}>Change profile</button>}\r\n            <p>About Me: {props.profile && props.profile.aboutMe}</p>\r\n            <p>Ищешь работу: {props.profile && props.profile.lookingForAJob ? 'да' : 'нет'}</p>\r\n            {props.profile && props.profile.lookingForAJobDescription &&\r\n            <p>Описание работы: {props.profile.lookingForAJobDescription}</p>}\r\n            <p className={s.contacts}>Контакты</p>\r\n            {props.profile && props.profile.contacts.facebook &&\r\n            <p>Страница в facebook: {props.profile.contacts.facebook}</p>}\r\n            {props.profile && props.profile.contacts.website &&\r\n            <p>Мой веб-сайт: {props.profile.contacts.website}</p>}\r\n            {props.profile && props.profile.contacts.vk &&\r\n            <p>Страница ВКонтакте: {props.profile.contacts.vk}</p>}\r\n            {props.profile && props.profile.contacts.twitter &&\r\n            <p>Страница в twitter: {props.profile.contacts.twitter}</p>}\r\n            {props.profile && props.profile.contacts.instagram &&\r\n            <p>Страница в instagram: {props.profile.contacts.instagram}</p>}\r\n            {props.profile && props.profile.contacts.youtube &&\r\n            <p>Мой канал на youtube: {props.profile.contacts.youtube}</p>}\r\n            {props.profile && props.profile.contacts.github &&\r\n            <p>Мой репозиторий на github: {props.profile.contacts.github}</p>}\r\n            {props.profile && props.profile.contacts.mainLink &&\r\n            <p>Страница в mainLink: {props.profile.contacts.mainLink}</p>}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileData;","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {ContactsType, ProfileType} from \"../../../Types/types\";\r\nimport {Field, Form} from \"react-final-form\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n    addChangeAvatar: (file: any) => void\r\n    changeInfoButton: (profile: any) => void\r\n    changeProfile: (profile: any) => void\r\n}\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = (props) => {\r\n\r\n    type valueType = {\r\n        aboutMe: string | null,\r\n        contacts: ContactsType,\r\n        lookingForAJob: boolean,\r\n        lookingForAJobDescription: string | null,\r\n        fullName: string,\r\n    }\r\n    let onSubmit = (value: valueType) => {\r\n        let profile = {...value, fullName: props.profile && props.profile.fullName, lookingForAJob: isChecked}\r\n        props.changeProfile(profile)\r\n    }\r\n\r\n    const [isChecked, setIsChecked] = useState<boolean | undefined>(props.profile?.lookingForAJob)\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({handleSubmit}) => (\r\n                    <form action=\"\" onSubmit={handleSubmit}>\r\n                        <button className={s.editButton}>Save profile</button>\r\n                        <button onClick={props.changeInfoButton} className={s.editButton}>Don't save changes</button>\r\n                        <p>About Me:</p>\r\n                        <Field component={\"input\"} type={'text'} name={'aboutMe'}\r\n                               initialValue={props.profile?.aboutMe}\r\n                               className={s.form}/>\r\n                        <p>Ищешь работу:</p>\r\n                        <span className={s.checkbox} onClick={() => setIsChecked(!isChecked)}>\r\n                             <Field component={\"input\"} type=\"checkbox\" name={'lookingForAJob'} checked={isChecked}/>\r\n                             <span className={s.wrapper}>\r\n                                  <i className={s.check}></i>\r\n                             </span>\r\n                        </span>\r\n                        <p>Описание работы: </p>\r\n                        <Field component={\"input\"} type={'text'}\r\n                               name={'lookingForAJobDescription'}\r\n                               initialValue={props.profile?.lookingForAJobDescription}\r\n                               className={s.form}/>\r\n                        <p className={s.contacts}>Контакты</p>\r\n                        <p>Страница в facebook: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.facebook'}\r\n                               initialValue={props.profile?.contacts.facebook}\r\n                               className={s.form}/>\r\n                        <p>Мой веб-сайт: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.website'}\r\n                               initialValue={props.profile?.contacts.website}\r\n                               className={s.form}/>\r\n                        <p>Страница ВКонтакте: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.vk'}\r\n                               initialValue={props.profile?.contacts.vk}\r\n                               className={s.form}/>\r\n                        <p>Страница в twitter: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.twitter'}\r\n                               initialValue={props.profile?.contacts.twitter}\r\n                               className={s.form}/>\r\n                        <p>Страница в instagram:</p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.instagram'}\r\n                               initialValue={props.profile?.contacts.instagram}\r\n                               className={s.form}/>\r\n                        <p>Мой канал на youtube: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.youtube'}\r\n                               initialValue={props.profile?.contacts.youtube}\r\n                               className={s.form}/>\r\n                        <p>Мой репозиторий на github: </p>\r\n                        <Field component={'input'} type={'text'}\r\n                               name={'contacts.github'}\r\n                               initialValue={props.profile?.contacts.github}\r\n                               className={s.form}/>\r\n                        <p>Страница в mainLink: </p>\r\n                        <Field component={'input'} type={'text'} name={'contacts.mainLink'}\r\n                               initialValue={props.profile?.contacts.mainLink}\r\n                               className={s.form}/>\r\n\r\n                    </form>\r\n                )}\r\n            />\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileDataForm;","import s from './AvavatarProfile.module.css'\r\nimport avatarUser from \"../../../../assets/images/user.png\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUserEdit} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {ChangeEvent} from \"react\";\r\n\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    photo:  string | null\r\n    addChangeAvatar: (file:any) => void\r\n}\r\n\r\n\r\nconst AvatarProfile: React.FC<PropsType> = (props) => {\r\n\r\n    let onChangeAvatarMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length)\r\n            props.addChangeAvatar(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img className={s.avatar}\r\n                 src={props.photo != null ? props.photo : avatarUser}/>\r\n            {!props.isOwner && <div className={s.blockInput}>\r\n                <input type={\"file\"} onChange={onChangeAvatarMe} id={'avatar'} className={s.inputPhoto}/>\r\n                <label htmlFor=\"avatar\" className={s.fakeInputPhoto}>\r\n                    <div className={s.blockFakeInputPhoto}>\r\n                        <FontAwesomeIcon icon={faUserEdit} className={s.iconFakeInputPhoto}/>\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvatarProfile;","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport './StatusProfile.css'\r\nimport {updateUserStatus} from \"../../../../redux/profileReducer\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\n\r\nlet StatusProfileWithHook: React.FC<PropsType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(false);\r\n    let [status, setStatus] = useState<string>(props.status)\r\n\r\n    let activeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let removeEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n            setStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {!props.isOwner ? (!editMode ? <div onDoubleClick={activeEditMode} className='StatusProfile_status'>\r\n                    {status ? status : 'Введите статус'}\r\n                </div> :\r\n                <div className='StatusProfile_inputBlock'><input autoFocus={true}\r\n                                                                 onChange={onStatusChange} value={status}\r\n                                                                 type=\"text\" className='StatusProfile_input'/>\r\n                    <button onClick={removeEditMode} className='StatusProfile_inputButton'>\r\n                        <i className='check'></i>\r\n                    </button>\r\n                </div>) : <div className='StatusProfile_status'>{status ? status :'Статус не введён'}</div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusProfileWithHook;","import React, {useState} from \"react\";\r\nimport {ProfileType} from \"../../../Types/types\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport AvatarProfile from \"./AvavatarProfile/AvatarProfile\";\r\nimport StatusProfileWithHook from \"./StatusProfile/StatusProfileWithHook\";\r\n\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n    addChangeAvatar: (file: any) => void\r\n    changeProfile: (profile: any) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <img className={s.profile_logo}\r\n                 src=\"https://www.komandirovka.ru/upload/save_file33/bf5/bf5c6f100d3d620c48787b3714cb4fea.jpg\" alt=\"\"/>\r\n            <div className={s.descriptions}>\r\n                <div className={s.descriptions_logo}>\r\n                    <AvatarProfile isOwner={props.isOwner} photo={props.profile && props.profile.photos.large}\r\n                                   addChangeAvatar={props.addChangeAvatar}/>\r\n                </div>\r\n                <div className={s.descriptions_text}>\r\n                    <div className={s.descriptions_name}>\r\n                        {props.profile && props.profile.fullName}\r\n                    </div>\r\n                    <StatusProfileWithHook isOwner={props.isOwner} status={props.status}\r\n                                           updateUserStatus={props.updateUserStatus}/>\r\n\r\n                    <div className={s.descriptions_about}>\r\n                        {!editMode ? <ProfileData {...props} changeInfoButton={() => setEditMode(true)}/> :\r\n                            <ProfileDataForm {...props} changeProfile={props.changeProfile} changeInfoButton={() => setEditMode(false)}/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css';\r\nimport avatarUser from '../../../../assets/images/user.png'\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    photos: string | null\r\n    message: string\r\n    id: number\r\n    likes: number\r\n    deletePost: (id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n        return (\r\n        <div className={s.post}>\r\n            <div className={s.post_content}>\r\n                <img className={s.post_logo}\r\n                     src={props.photos ? props.photos : avatarUser}\r\n                     alt=\"avatar\"/>\r\n                <p className={s.post_text}>{props.message}</p>\r\n                <span onClick={() => {props.deletePost(props.id)}} className={s.delete}></span>\r\n            </div>\r\n            <button id='button' className={s.post_like}>\r\n                like\r\n            </button>\r\n            <div className={s.post_likes} id='like'>\r\n                {props.likes}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Post;","import s from './NewPost.module.css'\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/Validators/validator\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\ntype PropsType = {\r\n    addPost:(newPostText: string) => void\r\n}\r\n\r\nconst AddNewPost: React.FC<PropsType> = (props) => {\r\n    let addNewPost = (values: {inputNewPost: string}) => {\r\n        props.addPost(values.inputNewPost)\r\n    }\r\n\r\n    const composeValidators = (...validators:any[]) => (value:any) =>\r\n        validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\n    return (\r\n        <Form onSubmit={addNewPost}>\r\n            {props => (\r\n                <form onSubmit={props.handleSubmit} className={s.newPost}>\r\n                    <Field component={Textarea} name='inputNewPost' className={s.newPost_textarea}\r\n                           placeholder='Введите текст нового поста'\r\n                           validate={composeValidators(required, maxLengthCreator(10))}/>\r\n                    <button disabled={props.hasValidationErrors && true} className={`${s.newPost_button} \r\n                    ${props.hasValidationErrors && s.disabled}`}>Send\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst NewPost: React.FC<PropsType> = (props) => {\r\n    return <AddNewPost addPost={props.addPost}/>\r\n}\r\n\r\n\r\nexport default NewPost;","import {addPost} from \"../../../../redux/profileReducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost:(newPostText: string) => void\r\n}\r\n\r\nconst NewPostContainer = connect<{}, MapDispatchPropsType, {}, AppStateType>(null, {addPost})(NewPost);\r\n\r\nexport default NewPostContainer;","import s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\nimport {PostDataType} from \"../../../Types/types\";\r\nimport React from \"react\";\r\n\r\n\r\ntype PropsType = {\r\n    postData: Array<PostDataType>\r\n    photos: string | null\r\n    deletePost: (id: number) => void\r\n}\r\n\r\nconst MyPosts: React.FC<PropsType> = (props) => {\r\n    let postsElement = props.postData.map(post => <Post message={post.message} likes={post.likesCount}\r\n                                                        photos={props.photos} key={post.id} id={post.id}\r\n                                                        deletePost={props.deletePost}/>)\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.posts_title}>\r\n                My Posts\r\n            </div>\r\n            <NewPostContainer/>\r\n            {postsElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyPostMemorized = React.memo(MyPosts)\r\n\r\nexport default MyPostMemorized;","import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport PreloaderUser from \"../Users/User/PreloaderUsers/PreloaderUsers\";\r\nimport {PostDataType, ProfileType} from \"../../Types/types\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile:  ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status:string) => void\r\n    addChangeAvatar: (file:any) => void\r\n    postData: Array<PostDataType>\r\n    deletePost: (id: number) => void\r\n    changeProfile: (profile: any) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    if (!props.profile) {\r\n        return (\r\n            <div className={s.preloaderBox}>\r\n                <PreloaderUser/>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateUserStatus={props.updateUserStatus} addChangeAvatar={props.addChangeAvatar} changeProfile={props.changeProfile}/>\r\n            <MyPosts photos={props.profile.photos.small} postData={props.postData} deletePost={props.deletePost}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    addChangeAvatar, deletePost,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    changeProfile\r\n} from \"../../redux/profileReducer\";\r\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport Error404 from \"../common/Error404/Error404\";\r\nimport {PostDataType, ProfileType} from \"../../Types/types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    authorizedUserId: null | number,\r\n    profile: ProfileType | null,\r\n    postData: Array<PostDataType>,\r\n    status: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateUserStatus: (status: string) => void\r\n    addChangeAvatar: (file: File) => void\r\n    deletePost: (id: number) => void\r\n    changeProfile: (profile: any) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype OwnProps = {\r\n    match: any\r\n    history: any\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainerAPI extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n       if (userId) {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getUserStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps :PropsType) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(Number(this.props.match.params.userId) === this.props.authorizedUserId) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n\r\n        // if(typeof this.props.profile === 'string') {\r\n        //    return <Error404/>\r\n        // }\r\n\r\n        return (\r\n            <Profile isOwner = {!!this.props.match.params.userId} {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) : MapStatePropsType => {\r\n    return {\r\n        profile: state.profileReducer.profile,\r\n        postData: state.profileReducer.postData,\r\n        status: state.profileReducer.status,\r\n        authorizedUserId: state.auth.id,\r\n    }\r\n}\r\n\r\n\r\nconst ProfileContainer = compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnProps, AppStateType>(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n        addChangeAvatar,\r\n        deletePost,\r\n        changeProfile\r\n    }),\r\n    withRouter,\r\n)(ProfileContainerAPI)\r\n\r\n// const WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n//\r\n// export default withAuthRedirect(connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent));\r\n\r\nexport default ProfileContainer\r\n\r\n","import s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userNull from '../../../src/assets/images/user.png';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    userPhoto: string | null\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.header_logo}>RUSLNETWORK</div>\r\n            {props.isAuth ?\r\n                <NavLink to='/profile' className={s.loginBlock}>\r\n                    <span>\r\n                        <div className={s.blockPhoto}>\r\n                            {props.userPhoto ? <img src={props.userPhoto} alt=\"\" className={s.photo}/> :\r\n                                <img src={userNull} alt=\"\" className={s.photoNull}/>}\r\n                        </div>\r\n                    </span>\r\n                    <span>{props.login}</span>\r\n                    <button onClick={props.logout} className={s.buttonLogout}>Logout</button>\r\n                </NavLink>\r\n\r\n                : <NavLink to='/login' className={s.loginBlock} activeClassName={s.active}>\r\n                    Login\r\n                </NavLink>\r\n            }\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    userPhoto: string | null\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderComponent extends React.Component<PropsType> {\r\n\r\n    render() {\r\n        return (<Header {...this.props}/>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n        userPhoto: state.auth.userPhoto,\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {logout})(HeaderComponent);","import s from './InputMessage.module.css';\r\nimport {Field, Form} from \"react-final-form\";\r\n\r\ntype PropsType = {\r\n    addNewMessage: (message:string) => void\r\n}\r\n\r\nconst AddMessageForm: React.FC<PropsType> = (props) => {\r\n    let addNewMessage = (formData: { textAreaMessage: string }) => {\r\n        props.addNewMessage(formData.textAreaMessage)\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={addNewMessage}\r\n              render={({handleSubmit, form}) => (\r\n                  <form onSubmit={handleSubmit} className={s.inputMessage}>\r\n                      <Field component='textarea' placeholder='Введите новое сообщение'\r\n                             name='textAreaMessage' className={s.textMessage}/>\r\n                      <button className={s.buttonSend}>\r\n                          <img className={s.buttonImg} src=\"https://img.icons8.com/plumpy/96/000000/filled-sent.png\"\r\n                               alt=\"\"/>\r\n                      </button>\r\n                  </form>\r\n              )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst InputMessage: React.FC<PropsType> = (props) => {\r\n    return <AddMessageForm addNewMessage={props.addNewMessage}/>\r\n};\r\n\r\n\r\nexport default InputMessage;","import s from './Message.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.messageInto}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import s from './BlockMessage.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport {MessageType} from \"../../../Types/types\";\r\n\r\ntype PropsType = {\r\n    messageElement: Array<MessageType>\r\n}\r\n\r\nconst BlockMessage: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    let messageElement = props.messageElement.map(message => <Message key={message.id} message={message.message}/>)\r\n\r\n    return (\r\n            <div className={s.blockMessage}>\r\n                {messageElement}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default BlockMessage;","import s from './DialogsItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    avatarUser: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n\r\n    let path = '/dialog/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>\r\n                <img className={s.avatarUser} src={props.avatarUser} alt='avatar'/>\r\n                <span className={s.nameUser}>\r\n                    {props.name}\r\n                </span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import s from './BlockDialogsItem.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport {DialogType} from \"../../../Types/types\";\r\n\r\ntype PropsType = {\r\n    dialogElement: Array<DialogType>\r\n}\r\n\r\nconst BlockDialogsItem: React.FC<PropsType> = (props) => {\r\n\r\n    let dialogElement = props.dialogElement.map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}\r\n                                                                          avatarUser={dialog.avatarUser}/>)\r\n\r\n    return (\r\n\r\n            <div className={s.dialogs_items}>\r\n                {dialogElement}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default BlockDialogsItem;","import s from './Dialogs.module.css';\r\nimport InputMessage from \"./InputMessage/InputMessage\";\r\nimport BlockMessage from \"./BlockMessage/BlockMessage\";\r\nimport BlockDialogsItem from \"./BlockDialogsItem/BlockDialogsItem\";\r\nimport {DialogType, MessageType} from \"../../Types/types\";\r\n\r\ntype PropsType = {\r\n    addNewMessage: (message:string) => void\r\n    messageElement: Array<MessageType>\r\n    dialogElement: Array<DialogType>\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <BlockDialogsItem dialogElement={props.dialogElement}/>\r\n            <div className={s.messages}>\r\n                <BlockMessage  messageElement={props.messageElement}/>\r\n                <InputMessage addNewMessage={props.addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nfunction withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\r\n\r\n\r\n    let RedirectComponent = (props: MapStatePropsType) => {\r\n\r\n        let {isAuth, ...restProps} = props\r\n\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to='login'/>\r\n        }\r\n\r\n        return <Component {...restProps as unknown as WCP}/>\r\n    }\r\n\r\n    return connect<MapStatePropsType, {}, WCP, AppStateType>(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","import Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {addNewMessage} from \"../../redux/dialogsReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {DialogType, MessageType} from \"../../Types/types\";\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    addNewMessage: (message:string) => void\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    messageElement: Array<MessageType>\r\n    dialogElement: Array<DialogType>\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        messageElement: state.dialogsReducer.messageData,\r\n        dialogElement: state.dialogsReducer.dialogsData,\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose<React.ComponentType>(withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {addNewMessage}))(Dialogs)\r\n\r\nexport default DialogsContainer;","import React from 'react'\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nfunction WithSuspense <WCP>(Component: React.ComponentType<WCP>) {\r\n\r\n    const ComponentHOC = (props: WCP) => {\r\n        return <React.Suspense fallback={<div className={'preloaderSuspense'}>\r\n            <Preloader height={'500px'}\r\n                       width={'500px'} borderWidth={'40px'}/>\r\n        </div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n\r\n    return ComponentHOC\r\n}\r\n\r\nexport default WithSuspense;","export default __webpack_public_path__ + \"static/media/error_404.83d95d70.png\";","import error404 from \"../../../assets/images/error_404.png\";\r\nimport s from \"./Error404.module.css\"\r\nimport React from \"react\";\r\n\r\nconst Error404 = (props) => {\r\n    return (<div>\r\n            <img src={error404} className={s.imagesError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React from 'react';\r\nimport s from './User.module.css'\r\nimport userNull from '../../../assets/images/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PreloaderButton from \"../../common/Preloader/PreloaderButton/PreloaderButton\";\r\nimport {UserType} from \"../../../Types/types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    authorizedUserId: number | null\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = ({user, ...props}) => {\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.avatarBlock}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={s.avatarUser} src={user.photos.large != null ? user.photos.large : userNull}\r\n                         alt=\"avatar\"/>\r\n                </NavLink>\r\n                {props.authorizedUserId === user.id ? null : (user.followed\r\n                    ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.unfollow(user.id)\r\n                    }}\r\n                              className={s.buttonFollow}>\r\n                        {props.followingInProgress.some(id => id === user.id) ? <PreloaderButton/> : 'Unfollow'}\r\n                    </button>\r\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.follow(user.id)\r\n                    }}\r\n                              className={s.buttonFollow}>\r\n                        {props.followingInProgress.some(id => id === user.id) ? <PreloaderButton/> : 'Follow'}\r\n                    </button>)}\r\n            </div>\r\n            <div className={s.profileUser}>\r\n                <div className={s.aboutUser}>\r\n                    <div className={s.nameUser}>{user.name}</div>\r\n                    <div className={s.bio}>{user.status}</div>\r\n                </div>\r\n                <div className={s.blockCountry}>\r\n                    <div className={s.countyUser}>country</div>\r\n                    <div className={s.cityUser}>city</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport s from './Friends.module.css'\r\nimport User from \"./User/User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {UserType} from \"../../Types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    portionSize?: number\r\n    usersData: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: Array<number>\r\n    authorizedUserId: number | null\r\n}\r\n\r\n\r\nlet Friends: React.FC<PropsType> = (props) => {\r\n    let usersData = props.usersData.map(user => <User follow={props.follow} unfollow={props.unfollow}\r\n                                                      user={user} key={user.id}\r\n                                                      followingInProgress={props.followingInProgress}\r\n                                                      authorizedUserId={props.authorizedUserId}/>)\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    let i = 1\r\n    for (i; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let handleChange = (e: any) => {\r\n        props.onPageChanged(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <select onChange={handleChange} value={props.currentPage} className={s.selectPage}>\r\n                {pages.map(p => (\r\n                    <option key={p} className={s.optionPage}>{p} </option>\r\n                ))}\r\n            </select>\r\n            {usersData}\r\n            <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                       currentPage={props.currentPage} onPageChanged={props.onPageChanged}/>\r\n        </div>)\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport s from './PreloaderUsers.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nlet PreloaderUser = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <Preloader height={'500px'} width={'500px'} borderWidth={'40px'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreloaderUser;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {follow, getUsers, setUsersCurrentPage, unfollow,} from \"../../redux/friendsReducer\";\r\nimport Friends from \"./Friends\";\r\nimport PreloaderUsers from \"./User/PreloaderUsers/PreloaderUsers\";\r\nimport {UserType} from \"../../Types/types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {\r\n    getAuthorizedUserId,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsPreloader,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersData\r\n} from \"../../redux/usersSelectors\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isPreloader: boolean\r\n    totalUsersCount: number\r\n    usersData: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    authorizedUserId: number | null\r\n    portionSize?: number\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    setUsersCurrentPage: (numberPage: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UserAPIComponent extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (numberPage: number) => {\r\n        this.props.setUsersCurrentPage(numberPage)\r\n        this.props.getUsers(numberPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isPreloader ?\r\n                    <PreloaderUsers/> : <Friends follow={this.props.follow} unfollow={this.props.unfollow}\r\n                                                 onPageChanged={this.onPageChanged}\r\n                                                 currentPage={this.props.currentPage}\r\n                                                 usersData={this.props.usersData}\r\n                                                 totalUsersCount={this.props.totalUsersCount}\r\n                                                 pageSize={this.props.pageSize}\r\n                                                 followingInProgress={this.props.followingInProgress}\r\n                                                 authorizedUserId={this.props.authorizedUserId}\r\n                    />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        usersData: getUsersData(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isPreloader: getIsPreloader(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        authorizedUserId: getAuthorizedUserId(state),\r\n    }\r\n}\r\n\r\n\r\n//TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState\r\nconst FriendsContainer = compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n    {\r\n        follow, unfollow,\r\n        setUsersCurrentPage, getUsers\r\n    }))\r\n(UserAPIComponent);\r\n\r\nexport default FriendsContainer;","import React from 'react'\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Setting from \"./components/Setting/Setting\";\nimport UsersContainer from \"./components/Users/UsersContainre\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderComponent from \"./components/Header/HeaderComponent\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport WithSuspense from \"./hoc/withSuspense\";\nimport Error404 from \"./components/common/Error404/Error404\";\nimport {AppStateType} from \"./redux/reduxStore\";\nimport FriendsContainer from \"./components/Friends/FriendsContainre\";\nimport {getSideBarUsers} from \"./redux/sideBarReducer\";\n\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\n\ntype MapStatePropsType = {\n    id: number | null\n    initialize: boolean\n}\n\ntype MapDispatchPropsType = {\n    initializeApp: () => void\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType\n\nclass App extends React.Component<PropsType> {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialize) {\n            return <div className='preloader'>\n                <Preloader height={'500px'} width={'500px'} borderWidth={'40px'}/>\n            </div>\n        }\n\n        return (\n            <HashRouter>\n                <div className='app-wrapper'>\n                    <HeaderComponent/>\n                    <NavBar/>\n                    <div className='app-content'>\n                        <Switch>\n                            <Route exact path='/' render={() => <Redirect to='/profile'/>}/>\n                            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                            <Route path='/dialog' render={() => <DialogsContainer/>}/>\n                            <Route path='/news' render={() => <News/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/setting' render={() => <Setting/>}/>\n                            <Route path='/friends' render={() => <FriendsContainer/>}/>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                            <Route path='/login' render={WithSuspense(Login)}/>\n                            <Route path='*' render={() => <Error404/>}/>\n                        </Switch>\n                    </div>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        id: state.auth.id,\n        initialize: state.app.initialized,\n    }\n}\n\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {initializeApp})(App);","import React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport store from \"./redux/reduxStore\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}